#define MAIN_FLOW
((bg 0 0.7 1)
   (rollout 0 0 0.55)
   (text
      (normal 0.9 0.9 0.9)
      (focused 0 0 0.6)))
(colors
   (text
      (normal 0.9 0.9 0.9)
      (focused 0.5 0.5 0.5)
      (selected 0.25 0.25 0.25)
      (disabled 0.5 0.5 0.5))
   (mesh
      (normal 0.4 0.4 0.4)
      (focused 0.65 0.65 0)
      (selected 0.8 0.8 0.8)
      (disabled 0.4 0.4 0.4))
   (arrow
      (normal 0.5 0.5 0.5)
      (focused 0.3 0.3 0.3)
      (selected 0.9 0.9 0.9)
      (disabled 0.4 0.4 0.4))
   (bg 0.3 0.3 0.3)
   (rollout 0.5 0.5 0.5)
   (rollout_disabled 0.5 0.5 0.5)
   (rollout_text_disabled 0.3 0.3 0.3)
   (char_highlight 1 1 1)
   (flow
      (main MAIN_FLOW)
      (quickplay
         (bg 1 0.5 0)
         (rollout 0.661 0.263 0)
         (text
            (normal 0.8 0.8 0.8)
            (focused 0.616 0.29 0))
         (char_highlight 0.8 0.4 0))
      (onemic
         (bg 0.2 0.2 1)
         (rollout 0 0 0.28)
         (text
            (normal 0.8 0.8 0.8)
            (focused 0 0 0.5))
         (char_highlight 0 0 1))
      (twomic
         (bg 0 0.9 0)
         (rollout 0 0.25 0)
         (text
            (normal 0.9 0.9 0.9)
            (focused 0 0.25 0))
         (char_highlight 0 0.7 0))
      (singdance
         (bg 1 0 0.6)
         (rollout 0.584 0 0.271)
         (text
            (normal 0.9 0.9 0.9)
            (focused 0.584 0 0.271))
         (char_highlight 0.5 0 0.4))
      (karaoke
         (bg 0.6 0.2 0.56)
         (rollout 0.36 0 0.45)
         (text
            (normal 0.9 0.9 0.9)
            (focused 0.5 0.2 0.35))
         (char_highlight 0.4 0 0.5))
      (charcreator
         MAIN_FLOW
         (char_highlight 0 0.3 1))
      (training MAIN_FLOW)
      (extras MAIN_FLOW)
      (options MAIN_FLOW)
      (xboxlive MAIN_FLOW)))
#define CHAR_STATE_FULL
((draw_loading TRUE)
   (draw_transition TRUE)
   (animset kEditAnimIdle)
   (animate TRUE)
   (view
      "char_playersetup.view")
   (char_placer
      "char_playersetup.char")
   (enter_tnm
      "char_playersetup_enter.tnm")
   (exit_tnm
      "char_playersetup_exit.tnm"))
#define CHAR_STATE_HEAD
((draw_loading TRUE)
   (draw_transition TRUE)
   (animset kEditAnimHead)
   (animate TRUE)
   (view
      "char_playersetup_head.view")
   (char_placer
      "char_playersetup_head.char"))
#define CHAR_STATE_ACC
((draw_loading TRUE)
   (draw_transition TRUE)
   (animset kEditAnimHead)
   (animate TRUE)
   (view
      "char_playersetup_acces.view")
   (char_placer
      "char_playersetup_acces.char"))
#define CHAR_STATE_RESULTS
((player_model TRUE)
   (draw_loading FALSE)
   (draw_transition FALSE)
   (animate TRUE))
#define CHAR_STATE_RESULTS_ANIMSET
((animset
      {switch
         {the_db
            get_game_rating
            {the_db get_active_player}}
         (kRatingPassGold kEditAnimGold)
         (kRatingPassPlatinum kEditAnimPlatinum)
         (kRatingPassDiamond kEditAnimDiamond)
         kEditAnimIdle}))
#define CHAR_STATE_RESULTS_ANIMSET_VS0
((animset
      {do
         (($winner
               {score_tracker
                  comp_round_winner
                  {the_db get_cur_player 0}
                  {the_db get_cur_player 1}}))
         {cond
            ({== $winner -1}
               kEditAnimIdle)
            ({==
                  $winner
                  {the_db get_cur_player 0}}
               kEditAnimDiamond)
            (TRUE kEditAnimLose)}}))
#define CHAR_STATE_RESULTS_ANIMSET_VS1
((animset
      {do
         (($winner
               {score_tracker
                  comp_round_winner
                  {the_db get_cur_player 0}
                  {the_db get_cur_player 1}}))
         {cond
            ({== $winner -1}
               kEditAnimIdle)
            ({==
                  $winner
                  {the_db get_cur_player 1}}
               kEditAnimDiamond)
            (TRUE kEditAnimLose)}}))
#define CHAR_STATE_WINNER
((player_model FALSE)
   (draw_loading FALSE)
   (draw_transition FALSE)
   (animate TRUE))
(char_states
   (none)
   (main
      (transition_period 350)
      (background TRUE)
      (chars
         (char
            (model 0)
            (player_model TRUE)
            (draw_loading FALSE)
            (draw_transition TRUE)
            (animset kEditAnimIdle)
            (animate TRUE)
            (stencil_mat
               "char_main_stencil.mat")
            (stencil_flow_colors TRUE)
            (view
               "char_main.view")
            (char_placer
               "char_main.char")
            (enter_tnm
               "char_main_enter.tnm")
            (exit_tnm
               "char_main_exit.tnm"))))
   (mode
      (transition_period 350)
      (background TRUE)
      (chars
         (char
            (model 0)
            (player_model TRUE)
            (animset kEditAnimIdle)
            (animate TRUE)
            (draw_transition TRUE)
            (draw_loading FALSE)
            (stencil_mat
               "char_mode_stencil.mat")
            (view
               "char_mode.view")
            (char_placer
               "char_mode.char")
            (enter_tnm
               "char_mode_enter.tnm")
            (exit_tnm
               "char_mode_exit.tnm"))))
   (unlocked
      (transition_period 350)
      (chars
         (char
            (model 0)
            (player_model FALSE)
            (draw_loading FALSE)
            (draw_transition FALSE)
            (animset kEditAnimIdle)
            (animate TRUE)
            (view
               "char_unlocked.view")
            (char_placer
               "char_unlocked.char"))))
   (creator_full
      (transition_period 350)
      (chars
         (char
            (model 0)
            (player_model FALSE)
            CHAR_STATE_FULL)))
   (creator_player_full0
      (transition_period 350)
      (chars
         (char
            (model 0)
            (player_model TRUE)
            CHAR_STATE_FULL)))
   (creator_player_full1
      (transition_period 350)
      (chars
         (char
            (model 1)
            (player_model TRUE)
            CHAR_STATE_FULL)))
   (creator_head
      (transition_period 350)
      (chars
         (char
            (model 0)
            (player_model FALSE)
            CHAR_STATE_HEAD)))
   (creator_player_head0
      (transition_period 350)
      (chars
         (char
            (model 0)
            (player_model TRUE)
            CHAR_STATE_HEAD)))
   (creator_player_head1
      (transition_period 350)
      (chars
         (char
            (model 1)
            (player_model TRUE)
            (draw_loading TRUE)
            CHAR_STATE_HEAD)))
   (creator_acc
      (transition_period 350)
      (chars
         (char
            (model 0)
            (player_model FALSE)
            CHAR_STATE_ACC)))
   (creator_player_acc0
      (transition_period 350)
      (chars
         (char
            (model 0)
            (player_model TRUE)
            CHAR_STATE_ACC)))
   (creator_player_acc1
      (transition_period 350)
      (chars
         (char
            (model 1)
            (player_model TRUE)
            CHAR_STATE_ACC)))
   (controllersetup_onemic
      (transition_period 350)
      (chars
         (char
            (model 0)
            (player_model TRUE)
            (draw_loading TRUE)
            (draw_transition FALSE)
            (animset kEditAnimIdle)
            (animate TRUE)
            (view
               "char_ctlrsetup_onemic.view")
            (char_placer
               "char_ctlrsetup_onemic.char"))))
   (controllersetup_twomic
      (transition_period 350)
      (chars
         (char
            (model 0)
            (player_model TRUE)
            (draw_loading TRUE)
            (draw_transition FALSE)
            (animset kEditAnimIdle)
            (animate TRUE)
            (view
               "char_ctlrsetup_twomic.view")
            (char_placer
               "char_ctlrsetup_p1_twomic.char"))
         (char
            (model 1)
            (player_model TRUE)
            (draw_loading TRUE)
            (draw_transition FALSE)
            (animset kEditAnimIdle)
            (animate TRUE)
            (view
               "char_ctlrsetup_twomic.view")
            (char_placer
               "char_ctlrsetup_p2_twomic.char"))))
   (onemic_loading
      (transition_period 350)
      (chars
         (char
            (model 0)
            (player_model TRUE)
            (draw_loading TRUE)
            (draw_transition TRUE)
            (animset kEditAnimLoadPose)
            (animate FALSE)
            (view
               "char_onemic_loading.view")
            (char_placer
               "char_onemic_loading.char"))))
   (twomic_coop_loading
      (transition_period 350)
      (chars
         (char
            (model 0)
            (player_model TRUE)
            (draw_loading TRUE)
            (draw_transition TRUE)
            (animset kEditAnimLoadPose)
            (animate FALSE)
            (view
               "char_twomic_coop_loading0.view")
            (char_placer
               "char_twomic_coop_loading0.char"))
         (char
            (model 1)
            (player_model TRUE)
            (draw_loading TRUE)
            (draw_transition TRUE)
            (animset kEditAnimLoadPose)
            (animate FALSE)
            (view
               "char_twomic_coop_loading1.view")
            (char_placer
               "char_twomic_coop_loading1.char"))))
   (results_onemic
      (transition_period 350)
      (chars
         (char
            (model 0)
            CHAR_STATE_RESULTS
            CHAR_STATE_RESULTS_ANIMSET
            (view
               "char_onemic_results.view")
            (char_placer
               "char_onemic_results.char"))))
   (results_medley_onemic
      (transition_period 350)
      (chars
         (char
            (model 0)
            CHAR_STATE_RESULTS
            CHAR_STATE_RESULTS_ANIMSET
            (view
               "char_onemic_medley_results.view")
            (char_placer
               "char_onemic_medley_results.char"))))
   (results_singdance
      (transition_period 350)
      (chars
         (char
            (model 0)
            CHAR_STATE_RESULTS
            CHAR_STATE_RESULTS_ANIMSET
            (view
               "char_onemic_results_singdance.view")
            (char_placer
               "char_onemic_results_singdance.char"))))
   (results_twomic_coop
      (transition_period 350)
      (chars
         (char
            (model 0)
            CHAR_STATE_RESULTS
            CHAR_STATE_RESULTS_ANIMSET
            (view
               "char_twomic_results_coop.view")
            (char_placer
               "char_twomic_results_coop_0.char"))
         (char
            (model 1)
            CHAR_STATE_RESULTS
            CHAR_STATE_RESULTS_ANIMSET
            (view
               "char_twomic_results_coop.view")
            (char_placer
               "char_twomic_results_coop_1.char"))))
   (results_twomic_vs
      (transition_period 350)
      (chars
         (char
            (model 0)
            CHAR_STATE_RESULTS
            CHAR_STATE_RESULTS_ANIMSET_VS0
            (view
               "char_twomic_results_vs.view")
            (char_placer
               "char_twomic_results_vs0.char"))
         (char
            (model 1)
            CHAR_STATE_RESULTS
            CHAR_STATE_RESULTS_ANIMSET_VS1
            (view
               "char_twomic_results_vs.view")
            (char_placer
               "char_twomic_results_vs1.char"))))
   (results_medley_twomic_coop
      (transition_period 350)
      (chars
         (char
            (model 0)
            CHAR_STATE_RESULTS
            CHAR_STATE_RESULTS_ANIMSET
            (view
               "char_twomic_medley_results_coop.view")
            (char_placer
               "char_twomic_medley_results_coop0.char"))
         (char
            (model 1)
            CHAR_STATE_RESULTS
            CHAR_STATE_RESULTS_ANIMSET
            (view
               "char_twomic_medley_results_coop.view")
            (char_placer
               "char_twomic_medley_results_coop1.char"))))
   (results_medley_twomic_vs
      (transition_period 350)
      (chars
         (char
            (model 0)
            CHAR_STATE_RESULTS
            CHAR_STATE_RESULTS_ANIMSET_VS0
            (view
               "char_twomic_medley_results_vs.view")
            (char_placer
               "char_twomic_medley_results_vs0.char"))
         (char
            (model 1)
            CHAR_STATE_RESULTS
            CHAR_STATE_RESULTS_ANIMSET_VS1
            (view
               "char_twomic_medley_results_vs.view")
            (char_placer
               "char_twomic_medley_results_vs1.char"))))
   (winner_onemic
      (transition_period 350)
      (chars
         (char
            (model 0)
            CHAR_STATE_WINNER
            (animset kEditAnimDiamond)
            (view
               "char_onemic_win.view")
            (char_placer
               "char_onemic_win.char"))))
   (winner_twomic_coop
      (transition_period 350)
      (chars
         (char
            (model 0)
            CHAR_STATE_WINNER
            (animset kEditAnimDiamond)
            (view
               "char_twomic_win.view")
            (char_placer
               "char_twomic_win0.char"))
         (char
            (model 1)
            CHAR_STATE_WINNER
            (animset kEditAnimDiamond)
            (view
               "char_twomic_win.view")
            (char_placer
               "char_twomic_win1.char"))))
   (winner_twomic_vs
      (transition_period 350)
      (chars
         (char
            (model 0)
            CHAR_STATE_WINNER
            (animset
               {if_else
                  {==
                     {score_tracker winner}
                     {the_db get_cur_player 0}}
                  kEditAnimDiamond
                  kEditAnimLose})
            (view
               "char_twomic_win_knockout.view")
            (char_placer
               "char_twomic_win_p1knockout.char"))
         (char
            (model 1)
            CHAR_STATE_WINNER
            (animset
               {if_else
                  {==
                     {score_tracker winner}
                     {the_db get_cur_player 1}}
                  kEditAnimDiamond
                  kEditAnimLose})
            (view
               "char_twomic_win_knockout.view")
            (char_placer
               "char_twomic_win_p2knockout.char")))))
(components
   (button
      (colors
         (mesh_color mesh)
         (text_color text)
         (title_color text)
         (arrow_color arrow))
      (text_margin 30)
      (above_title 20)
      (select_frames 10)
      (widest_particles 300)
      (particle_sys
         "button_particle.part")
      (left_arrow_mesh
         "left_arrow.mesh")
      (right_arrow_mesh
         "right_arrow.mesh")
      (styles
         (title
            (name
               "Title")
            (mesh
               "title_button.mesh")
            (font
               "axaxax.font")
            (default_size 398.5 40)
            (text_text
               "title_button_text.txt")
            (title_text
               "title_button_text.txt")
            (text_center_offset -3)
            (bones
               (view
                  "title_button.view")
               (tl
                  "title_bone1.mesh")
               (tr
                  "title_bone2.mesh")
               (bl
                  "title_bone3.mesh")
               (br
                  "title_bone4.mesh")))
         (docked_title
            (name
               "Docked Title")
            (mesh
               "title_button.mesh")
            (font
               "axaxax.font")
            (default_size 398.5 40)
            (text_text
               "docked_button_text.txt")
            (title_text
               "button.txt")
            (text_center_offset -2)
            (bones
               (view
                  "title_button.view")
               (tl
                  "title_bone1.mesh")
               (tr
                  "title_bone2.mesh")
               (bl
                  "title_bone3.mesh")
               (br
                  "title_bone4.mesh"))
            (colors
               (mesh_color
                  (normal 0.5 0.5 0.5))
               (text_color
                  (normal 0.9 0.9 0.9))))
         (continue
            (name
               "Continue")
            (mesh
               "continue_button.mesh")
            (font
               "axaxax.font")
            (default_size 398.5 40)
            (text_text
               "button.txt")
            (title_text
               "button.txt")
            (bones
               (view
                  "continue_button.view")
               (tl
                  "continue_bone1.mesh")
               (tr
                  "continue_bone2.mesh")
               (bl
                  "continue_bone3.mesh")
               (br
                  "continue_bone4.mesh")))
         (toggle
            (name
               "Toggle")
            (mesh
               "toggle_button.mesh")
            (font
               "axaxax.font")
            (default_size 289 21)
            (text_text
               "toggle_button_text.txt")
            (title_text
               "button.txt")
            (bones
               (view
                  "toggle_button.view")
               (tl
                  "toggle_bone1.mesh")
               (tr
                  "toggle_bone2.mesh")
               (bl
                  "toggle_bone3.mesh")
               (br
                  "toggle_bone4.mesh")))
         (main_menu
            (name
               "Main Menu")
            (mesh
               "menu_button.mesh")
            (font
               "albasuper.font")
            (focused_font
               "albasuper_glow.font")
            (default_size 289 21)
            (text_text
               "main.txt")
            (title_text
               "main.txt")
            (colors
               (text_color
                  (focused 0.95 0.95 0.2)
                  (selected 1 1 1))))))
   (label
      (colors
         (text_color 0.8 0.8 0.8))
      (styles
         (default
            (name
               "Default")
            (text label.txt))
         (label_dark
            (name
               "label_dark")
            (text label_dark.txt)
            (colors
               (text_color 0 0 0)))
         (label_outline
            (name
               "label_outline")
            (text label_outline.txt)
            (colors
               (text_color 1 0.8 0)))
         (label_results_score
            (name
               "label_results_score")
            (text label_results_score.txt)
            (colors
               (text_color 0.8 0.8 0.8)))
         (label_outline_white
            (name
               "label_outline_white")
            (text label_outline_white.txt)
            (colors
               (text_color 0.8 0.8 0.8)))
         (label_great
            (name
               "label_great")
            (text label_great.txt)
            (colors
               (text_color 0 0.55 0)))
         (label_good
            (name
               "label_good")
            (text label_good.txt)
            (colors
               (text_color 0.5 0.9 0)))
         (label_ok
            (name
               "label_ok")
            (text label_ok.txt)
            (colors
               (text_color 0.9 0.9 0)))
         (label_bad
            (name
               "label_bad")
            (text label_bad.txt)
            (colors
               (text_color 1 0.5 0)))
         (label_lousy
            (name
               "label_lousy")
            (text label_lousy.txt)
            (colors
               (text_color 0.65 0.2 0)))
         (label_dancelousy
            (name
               "label_dancelousy")
            (text label_dancelousy.txt)
            (colors
               (text_color 0 0.49 1)))
         (label_dancebad
            (name
               "label_dancebad")
            (text label_dancebad.txt)
            (colors
               (text_color 0.64 0.71 1)))
         (label_danceok
            (name
               "label_danceok")
            (text label_danceok.txt)
            (colors
               (text_color 0 0.96 1)))
         (label_dancegood
            (name
               "label_dancegood")
            (text label_dancegood.txt)
            (colors
               (text_color 0.96 0 1)))
         (label_dancegreat
            (name
               "label_dancegreat")
            (text label_dancegreat.txt)
            (colors
               (text_color 1 0 0.73)))
         (label_loadingname
            (name
               "label_loadingname")
            (text label_loadingname.txt)
            (colors
               (text_color 0.9 0.9 0.9)))
         (label_loadingscreen
            (force_lower)
            (name
               "label_loadingscreen")
            (text label_loadingscreen.txt)
            (colors
               (text_color 0.9 0.9 0.9)))
         (label_score_yellow
            (name
               "label_score_yellow")
            (text label_score_yellow.txt)
            (colors
               (text_color 0.9 0.9 0)))))
   (list
      (colors
         (text_color 0.9 0.9 0.9)
         (disabled_color 0.4 0.4 0.4)
         (highlight_text_color text)
         (highlight_mesh_color mesh))
      (styles
         (song
            (name
               "Song")
            (orientation vertical)
            (fade_offset 2)
            (back_arrow_mesh
               "song_back.mesh")
            (next_arrow_mesh
               "song_next.mesh")
            (highlight_mesh
               "song_highlight.mesh")
            (element
               (mesh
                  "trueduet.mesh"
                  (dummy
                     "dueticon.mat"))
               (mesh
                  "xboxlive.mesh"
                  (dummy
                     "xboxlive.mat"))
               (text
                  "song_name.txt"
                  (dummy
                     "song name"))))
         (credit
            (name
               "Credit")
            (colors
               (disabled_color 0.9 0.9 0.9))
            (orientation vertical)
            (fade_offset 2)
            (back_arrow_mesh
               "empty.mesh")
            (next_arrow_mesh
               "empty.mesh")
            (highlight_mesh
               "empty.mesh")
            (set_highlight_color FALSE)
            (element
               (text
                  "credit_line.txt"
                  (dummy
                     "Line"))
               (text
                  "credit_title.txt"
                  (dummy
                     "Title"))
               (text
                  "credit_center.txt"
                  (dummy
                     ""))
               (text
                  "credit_name.txt"
                  (dummy
                     "Name"))))
         (venue
            (name
               "Venue")
            (orientation vertical)
            (fade_offset 2)
            (back_arrow_mesh
               "song_back.mesh")
            (next_arrow_mesh
               "song_next.mesh")
            (highlight_mesh
               "venue_highlight.mesh")
            (element
               (text
                  "venue_name.txt"
                  (dummy
                     "venue name"))))
         (trophy
            (name
               "Trophy")
            (orientation horizontal)
            (fade_offset 1)
            (back_arrow_mesh
               "trophy_back.mesh")
            (next_arrow_mesh
               "trophy_next.mesh")
            (highlight_mesh
               "trophy_highlight.mesh")
            (highlight_front TRUE)
            (set_highlight_color FALSE)
            (element
               (mesh
                  "trophy_highlight_bg.mesh"
                  (dummy
                     "trophy_highlight_bg.mat")
                  (only_highlight TRUE))
               (mesh
                  "trophy.mesh"
                  (dummy
                     "trophy_icon1.mat"))))
         (high_score
            (name
               "High Score")
            (orientation vertical)
            (fade_offset 1)
            (back_arrow_mesh
               "score_back.mesh")
            (next_arrow_mesh
               "score_next.mesh")
            (highlight_mesh
               "score_highlight.mesh")
            (element
               (mesh
                  "score_bg.mesh"
                  (dummy
                     "score_bg.mat"))
               (text
                  "score_number.txt"
                  (dummy
                     "1."))
               (text
                  "score_user.txt"
                  (dummy
                     "username"))
               (mesh
                  "score_cd.mesh"
                  (dummy
                     "smallcd_gold.mat"))
               (text
                  "score_score.txt"
                  (dummy
                     "50000"))
               (text
                  "score_song.txt"
                  (dummy
                     "super sonic soul megadrive"))
               (text
                  "score_date.txt"
                  (dummy
                     "01/01/01"))))
         (unlock
            (name
               "Unlock Progress")
            (orientation vertical)
            (fade_offset 1)
            (back_arrow_mesh
               "unlock_back.mesh")
            (next_arrow_mesh
               "unlock_next.mesh")
            (highlight_mesh
               "unlock_highlight.mesh")
            (element
               (mesh
                  "unlock_bg.mesh"
                  (dummy
                     "unlock_bg.mat"))
               (mesh
                  "unlock_checkbox.mesh"
                  (dummy
                     "unlock_checkbox.mat"))
               (mesh
                  "unlock_check.mesh"
                  (dummy
                     "unlock_check.mat"))
               (text
                  "unlock_number.txt"
                  (dummy
                     "1."))
               (text
                  "unlock_title.txt"
                  (dummy
                     "unlock description"))
               (text
                  "unlock_date.txt"
                  (dummy
                     "01/01/01"))))))
   (meter
      (styles
         (mic
            (name
               "Mic Volume")
            (view
               "micmeter.view")
            (anim
               "micmeter.tnm")
            (bg_mesh
               "micmeter_leds_bg.mesh")
            (leds_mesh
               "micmeter_leds.mesh")
            (solid_leds_mesh
               "micmeter_leds_solid.mesh"))))
   (picture
      (styles
         (venue
            (name
               "Venue")
            (mesh
               "picture_venue.mesh")
            (tex_path
               "krui/image"))
         (param_char0
            (name
               "Param Char 1")
            (mesh
               "param_char0.mesh")
            (tex_path
               "charsys/prefabs"))
         (param_char1
            (name
               "Param Char 2")
            (mesh
               "param_char1.mesh")
            (tex_path
               "charsys/prefabs"))
         (full_char0
            (name
               "Full Char 1")
            (mesh
               "fullchar0.mesh")
            (tex_path
               "krui/image"))
         (full_char1
            (name
               "Full Char 2")
            (mesh
               "fullchar1.mesh")
            (tex_path
               "krui/image"))
         (param_venue
            (name
               "Param Venue")
            (mesh
               "param_venue.mesh")
            (tex_path
               "krui/image"))))
   (rollable
      (fade_period 150)
      (panel_overrides
         (twomic 100)))
   (rollout
      (fade_period 150)
      (text_offset 0 -15)
      (alpha 0.25))
   (slider
      (colors
         (mesh_color mesh)
         (text_color text))
      (styles
         (char
            (name
               "Character")
            (slider_mesh
               "char_slider.mesh")
            (bar_mesh
               "char_slider_bar.mesh")
            (pod_mesh
               "char_slider_pod.mesh")
            (pod_anim
               "char_slider.tnm")
            (text
               "char_slider.txt")
            (default_bar_mat
               "char_slider_default.mat"))
         (mic
            (name
               "Microphone")
            (bg_mesh
               "mic_slider_bg.mesh")
            (slider_mesh
               "mic_slider.mesh")
            (bar_mesh
               "mic_slider_bar.mesh")
            (pod_mesh
               "mic_slider_pod.mesh")
            (pod_anim
               "mic_slider.tnm")
            (text
               "mic_slider.txt")
            (default_bar_mat
               "progbar_red.mat")
            (bar_anim
               "mic_slider_fill.msnm")
            (colors
               (text_color 0.8 0.8 0.8)
               (mesh_color
                  (normal 0.4 0.4 0.4)
                  (focused 0.65 0.65 0)
                  (selected 0.8 0.8 0.8)
                  (disabled 0.3 0.3 0.3)))
            (bar_color 1.0 0.9 0.2)
            (disabled_alpha 0.5)))))