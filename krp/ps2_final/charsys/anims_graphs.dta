#include ../config/macros.dta
#define SINGER_ANIM_GRAPH
((graph
      (transitions
         ((kSingBad kSingNormal kSingGreat kSingPeak kSingDuetLeft kSingDuetRight kSingBreak kWalkStop)
            (kSingBad kSingNormal kSingGreat kSingPeak kSingWin kSingLose kSingMicDownIdle kSingDuetLeft kSingDuetRight kWalkTurn))
         ((kSingWin kSingLose kSingMicDownIdle kWalkWalk)
            (self))
         ((kWalkTurn)
            (kWalkWalk))
         ((kSingBreak kSingBad kSingNormal kSingGreat kSingPeak kSingDuetLeft kSingDuetRight kWalkStop)
            (kSingBreak)))
      (exclusions
         (kWalkLeft kWalkRight kWalkBackward)
         (kWalkForward kWalkBackward)
         (kSingDuetLeft kSingDuetRight))
      (criteria
         ((max_error 18)
            (beat_border 0.2))
         ((kSingWin kSingLose)
            (kSingWin kSingLose)
            ((restrict
                  {&&
                     {< $node.b_start 5}
                     {< $node.a_end 2}})))
         ((kSingDuetLeft kSingDuetRight)
            (kSingDuetLeft kSingDuetRight)
            ((restrict
                  {&&
                     {< $node.b_start 3}
                     {< $node.a_end 3}})))
         ((kSingBreak)
            (kSingBreak)
            ((restrict
                  {&&
                     {< $node.b_start 3}
                     {< $node.a_end 3}})))
         ((kSingMicDownIdle)
            (kSingMicDownIdle)
            ((restrict
                  {&&
                     {< $node.b_start 3}
                     {< $node.a_end 3}})))
         ((kSingBreak)
            (kSingBad kSingNormal kSingGreat kSingPeak)
            ((min_dist 3)
               (max_dist 5)
               (end_dist 3)
               (max_facing 30)
               (restrict
                  {< $node.b_start 3})))
         ((kSingBad kSingNormal kSingGreat kSingPeak kSingDuetLeft kSingDuetRight)
            (kSingBreak)
            ((min_dist 3)
               (max_dist 5)
               (end_dist 3)
               (max_facing 30)
               (restrict
                  {< $node.b_start 3})))
         ((kSingBad kSingNormal kSingGreat kSingPeak kSingDuetLeft kSingDuetRight kSingBreak)
            (kSingBad kSingNormal kSingGreat kSingPeak kSingDuetLeft kSingDuetRight)
            ((max_facing 60)
               (restrict
                  {&&
                     {< $node.b_start 3}
                     {< $node.a_end 3}})))
         (()
            (kWalkWalk)
            ((beat_align 2)))
         ((kWalkWalk)
            (self)
            ((restrict
                  {&&
                     {< $node.b_start 1.7}
                     {< $node.a_end 1.1}})))
         (()
            (kWalkTurn)
            ((min_dist 5)
               (max_dist 7)
               (end_dist 3)
               (restrict
                  {< $node.b_start 1.2})))
         ((kWalkTurn)
            (kWalkWalk)
            ((min_dist 1.5)
               (restrict
                  {&&
                     {< $node.a_end 1.2}
                     {< $node.b_start 2}})))
         (()
            (kSingMicDownIdle kSingWin kSingLose)
            ((max_dist 5)
               (min_dist 3)
               (end_dist 3)
               (max_facing 60)
               (restrict
                  {< $node.b_start 3})))
         ((kWalkStop)
            ()
            ((max_facing -1)
               (restrict
                  {&&
                     {< $node.b_start 3}
                     {> $node.a_start 3}}))))))
#define UI_ANIM_GRAPH
((graph
      (transitions
         ((kEditAnimHead kEditAnimLose kEditAnimGold kEditAnimPlatinum kEditAnimDiamond)
            (self))
         ((kEditAnimIdle kEditAnimPants kEditAnimShoes kEditAnimTorso)
            (kEditAnimIdle kEditAnimPants kEditAnimShoes kEditAnimTorso)))
      (criteria
         ((max_error 18)
            (beat_border 0.3)
            (min_dist 0.7)
            (max_dist 1.7)
            (end_dist 2)
            (max_facing 0))
         (()
            ()
            ((restrict
                  {< $node.b_start 2})))
         (()
            (self)
            ((max_dist -1)
               (end_dist -1)
               (restrict
                  {< $node.a_end 2})))
         (()
            (kEditAnimIdle)
            ((end_dist -1)
               (restrict
                  {< $node.a_end 2}))))))
#define BAD_BAND_PLAY
(bass_medium_special dj_fast_special_01 dj_medium_special guitar_medium_special_01 guitar_medium_special_02 key_medium_special)
#define BAND_GRAPH
((graph
      (transitions
         ((kStagePlay kStageIdle kStageSolo2 kStageSolo1 kStageSpecial)
            (kStageWin kStageLose))
         ((kStageWin kStageLose kStagePlay kStageIdle kStageSolo2 kStageSolo1 kStageSpecial)
            (self))
         ((kStagePlay kStageSpecial)
            (kStagePlay kStageSpecial))
         ((BAD_BAND_PLAY)
            (kStageIdle kStageSolo1 kStageSolo2)))
      (criteria
         ((max_error 11)
            (beat_border -0.1))
         ((kStageWin kStageLose)
            (kStageWin kStageLose)
            ((restrict
                  {&&
                     {< $node.b_start 4}
                     {< $node.a_end 1.5}})))
         ((kStagePlay kStageIdle kStageSolo1 kStageSolo2 kStageSpecial)
            (kStageWin kStageLose)
            ((max_dist 2.5)
               (min_dist 1.2)
               (end_dist 2)
               (restrict
                  {< $node.b_start 2})))
         ((BAD_BAND_PLAY)
            (kStageIdle kStageSolo1 kStageSolo2)
            ((max_dist 3)
               (min_dist 2)
               (end_dist 2)
               (restrict
                  {< $node.b_start 2})))
         (()
            ()
            ((restrict
                  {&&
                     {< $node.b_start 2}
                     {< $node.a_end 1.5}})))
         ((dancer_fast)
            (self)
            ((beat_border 1)))
         ((dancer_slow)
            (dancer_medium)
            ((max_error 18))))))