#define JUDGING_PANEL_HANDLERS
((retain_back_focus TRUE)
   (enter
      {if
         {&&
            {the_db use_song_type}
            {<=
               {mode_mgr get_num_teams}
               1}
            {!
               {score_tracker is_multi_round}}
            {!
               {the_db is_challenge}}}
         {judging_songtype.btn
            set_list
            {cond
               ({the_db is_singdance}
                  (perform practice))
               ({the_db is_demo}
                  (full short))
               (TRUE
                  (full short practice))}}
         {judging_songtype.btn
            set_text
            {cond
               ({the_db is_practice_mode}
                  practice)
               ({the_db is_singdance}
                  perform)
               ({the_db is_short_play}
                  short)
               (TRUE full)}}
         {if
            {&&
               {the_db is_singdance}
               {the_db is_demo}}
            {if
               {==
                  {judging_songtype.btn state}
                  kFocused}
               {$this navigate_next}}
            {judging_songtype.btn set_state kDisabled}}}
      {judging_sing0.btn
         set_list
         (easy medium hard expert)}
      {judging_sing0.btn
         set_selected_pos
         {the_db
            get_skill
            {the_db get_cur_player 0}}}
      {if
         {the_db is_duet}
         {judging_sing1.btn
            set_list
            (easy medium hard expert)}
         {judging_sing1.btn
            set_selected_pos
            {the_db
               get_skill
               {the_db get_cur_player 1}}}}
      {if
         {the_db is_singdance}
         {judging_dance.btn
            set_list
            (easy medium hard expert)}
         {judging_dance.btn
            set_selected_pos
            {the_db
               get_dance_skill
               {the_db get_active_player}}}}
      {judging_player.btn set_selected}
      {judging_player.btn
         set_localized_text
         {mode_mgr get_round_name}}
      {if
         {mode_mgr is_team_mode}
         {judging_player0.lbl
            set_localized_text
            {the_db
               get_player_name
               {the_db get_cur_player 0}}}
         {judging_player1.lbl
            set_localized_text
            {the_db
               get_player_name
               {the_db get_cur_player 1}}}}
      {if_else
         {&&
            {the_db use_song_type}
            {!
               {score_tracker num_rounds}}}
         {judging_rollout.roll set_text select_song_type_level}
         {judging_rollout.roll set_text select_judging_level}}
      {meta_music_start})
   (SCROLL_MSG
      {switch
         $component
         (judging_songtype.btn
            {switch
               {judging_songtype.btn get_text}
               (full
                  {the_db set_practice_mode FALSE}
                  {the_db set_short_play FALSE})
               (short
                  {the_db set_practice_mode FALSE}
                  {the_db set_short_play TRUE})
               (practice
                  {the_db set_practice_mode TRUE}
                  {the_db set_short_play FALSE})
               (perform
                  {the_db set_practice_mode FALSE})})
         (judging_sing0.btn
            {the_db
               set_skill
               {the_db get_cur_player 0}
               {judging_sing0.btn selected_pos}})
         (judging_sing1.btn
            {the_db
               set_skill
               {the_db get_cur_player 1}
               {judging_sing1.btn selected_pos}})
         (judging_dance.btn
            {the_db
               set_dance_skill
               {the_db get_active_player}
               {judging_dance.btn selected_pos}})})
   (SELECT_MSG
      {switch
         $component
         (judging_continue.btn
            {ui goto_screen READY_SCREEN})}))
{new_kr_panel
   judging_quickplay
   (navigator
      (vertical judging_songtype.btn judging_sing0.btn judging_continue.btn))
   (focus judging_songtype.btn)
   JUDGING_PANEL_HANDLERS}
{new_kr_panel
   judging_onemic
   (navigator
      (vertical judging_sing0.btn judging_continue.btn))
   (focus judging_sing0.btn)
   JUDGING_PANEL_HANDLERS}
{new_kr_panel
   judging_twomic
   (navigator
      (vertical judging_sing0.btn judging_sing1.btn judging_continue.btn))
   (focus judging_sing0.btn)
   JUDGING_PANEL_HANDLERS}
{new_kr_panel
   judging_twomic_coop
   (navigator
      (vertical judging_songtype.btn judging_sing0.btn judging_sing1.btn judging_continue.btn))
   (focus judging_songtype.btn)
   JUDGING_PANEL_HANDLERS}
{new_kr_panel
   judging_singdance
   (navigator
      (vertical judging_songtype.btn judging_sing0.btn judging_dance.btn judging_continue.btn))
   (focus judging_songtype.btn)
   JUDGING_PANEL_HANDLERS}
{new_kr_panel
   judging_onemic_singdance
   (navigator
      (vertical judging_sing0.btn judging_dance.btn judging_continue.btn))
   (focus judging_sing0.btn)
   JUDGING_PANEL_HANDLERS}
#define JUDGING_SCREEN_HANDLERS
((char main)
   (status
      (judging_songtype.btn
         ((button back)
            (text back)
            (button select)
            (text next_option)))
      (judging_sing0.btn
         ((button back)
            (text back)
            (button select)
            (text next_option)))
      (judging_sing1.btn
         ((button back)
            (text back)
            (button select)
            (text next_option)))
      (judging_dance.btn
         ((button back)
            (text back)
            (button select)
            (text next_option)))
      (judging_continue.btn
         ((button back)
            (text back)
            (button select)
            (text select)))))
#define JUDGING_ONEMIC_SCREEN_HANDLERS
(JUDGING_SCREEN_HANDLERS
   (char_pics
      ((0 judging_player.pic))))
#define JUDGING_TWOMIC_SCREEN_HANDLERS
(JUDGING_SCREEN_HANDLERS
   (char_pics
      ((0 judging_player0.pic)
         (1 judging_player1.pic))))
#define JUDGING_SINGDANCE_HANDLER
(JUDGING_SCREEN_HANDLERS
   (char_pics
      ((0 judging_player.pic)))
   (enter
      {if_else
         {&&
            {the_db is_challenge}
            {score_tracker cur_round}}
         {do
            {if
               {==
                  {judging_sing0.btn state}
                  kFocused}
               {$this navigate_next}}
            {judging_sing0.btn set_state kDisabled}}
         {if
            {!=
               {judging_sing0.btn state}
               kFocused}
            {judging_sing0.btn set_state kNormal}}}))
{new_kr_screen
   judging_onemic
   (panels bg status left judging_onemic)
   (focus judging_onemic)
   JUDGING_ONEMIC_SCREEN_HANDLERS}
{new_kr_screen
   judging_quickplay
   (panels bg status left judging_quickplay)
   (focus judging_quickplay)
   JUDGING_ONEMIC_SCREEN_HANDLERS}
{new_kr_screen
   judging_twomic
   (panels bg status left judging_twomic)
   (focus judging_twomic)
   JUDGING_TWOMIC_SCREEN_HANDLERS}
{new_kr_screen
   judging_twomic_coop
   (panels bg status left judging_twomic_coop)
   (focus judging_twomic_coop)
   JUDGING_TWOMIC_SCREEN_HANDLERS}
{new_kr_screen
   judging_singdance
   (panels bg status left judging_singdance)
   (focus judging_singdance)
   JUDGING_SINGDANCE_HANDLER}
{new_kr_screen
   judging_onemic_singdance
   (panels bg status left judging_onemic_singdance)
   (focus judging_onemic_singdance)
   JUDGING_SINGDANCE_HANDLER}