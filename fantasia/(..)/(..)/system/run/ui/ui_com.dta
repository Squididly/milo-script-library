(UINavCom
   (description
      "Manages navigation among UI screens and lists and owns the focused object.")
   (required_classes UIScreen UIList)
   (user_can_add FALSE)
   (alias
      "UI Navigation")
   (editor
      (nav_controller
         object
         (class UINavController)
         (help
            "UINavController to dictate how the player controls this nav"))
      (focus
         object
         (class Trans)
         (components
            (UIFocusableCom))
         (help
            "Object with focus")
         (hide
            {$this is_a UIList})
         (no_test))
      (direction
         int
         (list UINAVDIRECTION_ENUM)
         (help
            "Direction the player navigates through widgets when using the joypad"))
      (wrap
         bool
         (help
            "Can the player get to the right-most widget if they press left while on the left-most widget, etc.?"))))
(UIFocusableCom
   (description
      "Makes a UI object navigable.")
   (required_classes UILabel UIPicture UIList Entity)
   (user_can_add TRUE)
   (alias
      "UI Focusable")
   (editor
      (state
         int
         (list UISTATE_ENUM)
         (help
            "State of the UI widget"))
      (hover_value
         float
         (range 0.0 1.0)
         (help
            "An indication of how close this widget is to being hovered over"))
      (selection_value
         float
         (range 0.0 1.0)
         (help
            "An indication of how close this widget is to being selected"))
      (select_flow
         object
         (class Flow)
         (disk_prop)
         (help
            "This flow will be run when the object is selected, and screens will not move on until it's done."))))
(UITransCom
   (description
      "Allows a UI object to specify entering and exiting flows for UI transition.")
   (required_classes UIScreen UILabel UIPicture UIList Entity)
   (user_can_add TRUE)
   (alias
      "UI Transition")
   (editor
      (entering_flow
         object
         (class Flow)
         (help
            "This flow will be run when the UI object is entered and it will not finish entering until it terminates (so it MUST terminate).")
         (disk_prop))
      (exiting_flow
         object
         (class Flow)
         (help
            "This flow will be run when the UI object is exited and it will not finish exiting until it terminates (so it MUST terminate).")
         (disk_prop))))
(UIDrawHelperCom
   (description
      "UI component to harvest 2D and 3D drawables.")
   (required_classes UIScreen Entity)
   (user_can_add FALSE)
   (superclasses DrawHelperCom)
   (group Render)
   (editor
      (debug_draw_order
         (array
            (struct
               (draw
                  object
                  (class Draw))
               (layer_name string)
               (is_2d bool)
               (no_bound bool))
            (header
               {{$this
                     get
                     {editor_prop_path_child draw}}
                  name})
            (summary
               {do
                  ($is_2d
                     {if_else
                        {$this
                           get
                           {editor_prop_path_child is_2d}}
                        " (2D)"
                        ""})
                  ($is_no_bound
                     {if_else
                        {$this
                           get
                           {editor_prop_path_child no_bound}}
                        " (no bound)"
                        ""})
                  {sprintf
                     "layer %s%s%s"
                     {$this
                        get
                        {editor_prop_path_child layer_name}}
                     $is_2d
                     $is_no_bound}}))
         (alias
            "Most Recent Draw Order")
         (read_only TRUE)
         (tab debug))))