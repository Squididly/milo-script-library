#define DISPLAY_NAVIGATOR_SND
((navigator
      (vertical display_staff.btn display_lyrics.btn display_dance.btn display_continue.btn)))
#define DISPLAY_INIT_STAFF
({display_staff.btn
      set_list
      (on off)}
   {display_staff.btn
      set_selected_pos
      {if_else
         {the_db get_show_music_staff}
         0
         1}})
#define DISPLAY_INIT_LYRICS
({display_lyrics.btn
      set_list
      (on off)}
   {display_lyrics.btn
      set_selected_pos
      {if_else
         {the_db get_show_lyrics}
         0
         1}})
#define DISPLAY_INIT_DANCE
({display_dance.btn
      set_list
      (on off)}
   {display_dance.btn
      set_selected_pos
      {if_else
         {the_db get_show_dance_steps}
         0
         1}})
#define DISPLAY_PANEL_HANDLERS
((focus display_staff.btn)
   (retain_last_focus FALSE)
   (SCROLL_MSG
      {switch
         $component
         (display_staff.btn
            {the_db
               set_show_music_staff
               {!
                  {display_staff.btn selected_pos}}})
         (display_lyrics.btn
            {the_db
               set_show_lyrics
               {!
                  {display_lyrics.btn selected_pos}}})
         (display_dance.btn
            {the_db
               set_show_dance_steps
               {!
                  {display_dance.btn selected_pos}}})
         (display_eyetoy.btn
            {the_db
               set_eyetoy_video_option
               {!
                  {display_eyetoy.btn selected_pos}}})}))
{new_kr_panel
   options_display
   DISPLAY_NAVIGATOR_SND
   (enter DISPLAY_INIT_STAFF DISPLAY_INIT_LYRICS DISPLAY_INIT_DANCE)
   DISPLAY_PANEL_HANDLERS}
{new_kr_panel
   options_display_eyetoy
   (navigator
      (vertical display_staff.btn display_lyrics.btn display_dance.btn display_eyetoy.btn display_continue.btn))
   (enter
      DISPLAY_INIT_STAFF
      DISPLAY_INIT_LYRICS
      DISPLAY_INIT_DANCE
      {display_eyetoy.btn
         set_list
         (on off)}
      {display_eyetoy.btn
         set_selected_pos
         {if_else
            {the_db eyetoy_video_option}
            0
            1}})
   DISPLAY_PANEL_HANDLERS}
{new_kr_panel
   pause_display
   (navigator
      (vertical display_staff.btn display_lyrics.btn display_continue.btn))
   (enter DISPLAY_INIT_STAFF DISPLAY_INIT_LYRICS)
   DISPLAY_PANEL_HANDLERS}
{new_kr_panel
   pause_display_snd
   DISPLAY_NAVIGATOR_SND
   (enter DISPLAY_INIT_STAFF DISPLAY_INIT_LYRICS DISPLAY_INIT_DANCE)
   DISPLAY_PANEL_HANDLERS}
#define DISPLAY_SCREEN_HANDLERS
((status
      (display_continue.btn
         ((button back)
            (text back)
            (button select)
            (text select)))
      (default
         ((button back)
            (text back)
            (button select)
            (text next_option))))
   (dockable TRUE)
   (help_text_label display_helptext.lbl)
   (help_text
      (display_staff.btn gameplay_help_staff)
      (display_lyrics.btn gameplay_help_lyrics)
      (display_dance.btn gameplay_help_dance)
      (display_eyetoy.btn gameplay_help_eyetoy)))
#define PAUSE_DISPLAY_SCREEN_HANDLERS
((goto
      (display_continue.btn PAUSE_SCREEN))
   (exit
      {the_hud settings_changed})
   (BUTTON_DOWN_MSG
      {if
         {platform is_button back $button}
         {go_back PAUSE_SCREEN}}))
{new_kr_screen
   options_display
   (panels bg status left options_rollout options_display)
   (focus options_display)
   DISPLAY_SCREEN_HANDLERS
   (goto
      (display_continue.btn OPTIONS_SCREEN))}
{new_kr_screen
   options_display_eyetoy
   (panels bg status left options_rollout options_display_eyetoy)
   (focus options_display_eyetoy)
   DISPLAY_SCREEN_HANDLERS
   (goto
      (display_continue.btn OPTIONS_SCREEN))}
{new_kr_screen
   pause_display
   (panels pause_bg status pause_display)
   (focus pause_display)
   DISPLAY_SCREEN_HANDLERS
   PAUSE_DISPLAY_SCREEN_HANDLERS}
{new_kr_screen
   pause_display_snd
   (panels pause_bg status pause_display_snd)
   (focus pause_display_snd)
   DISPLAY_SCREEN_HANDLERS
   PAUSE_DISPLAY_SCREEN_HANDLERS}