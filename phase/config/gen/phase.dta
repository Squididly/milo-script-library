(mem
 (heaps
  (main
   (size 100000000))
  (synth
   (size 10000000)))
 (pool
  (big_hunk 50000)
  (small_hunk 50000))
 (disable_mgr 0)
 (track_stl 0)
 (check_consistency 0))
(timer a b c d e f g h i j run render cpu)
(locale
 "ui/eng/locale.dta")
(rnd
 (width 320)
 (height 240)
 (title
  "phase")
 (overlays
  (camera
   (lines 3)
   (showing 0))
  (camtest
   (lines 1)
   (showing 0))
  (game
   (lines 1)
   (showing 0))
  (blender_preset
   (lines 1)
   (showing 0))
  (song_pos
   (lines 1)
   (showing 0))
  (song_lyrics
   (lines 1)
   (showing 0))
  (perf_cpu)
  (msg
   (lines 16))
  (rate
   (color 0 1.8367e-41 0 1.8367e-41))
  (heap)
  (stats)
  (timers)
  (input
   (color 0 3.6734e-41 3.6734e-41 1))
  (output
   (lines 23))
  (synth_hud)
  (load
   (lines 2)))
 (clear_color 0 0 0)
 (bpp 16)
 (gamma 7.806e-41)
 (sync 1)
 (console_buffer 50)
 (shadow_plane 0 0 1 0)
 (limit_uv_range 6)
 (shaders
  (estimated_cost_divisor 9.18355e-39))
 (movie_readahead 0))
(songs_dir
 "C:\\ITunes_Test")
(test_dir
 "")
(wav_dir
 "")
(midi_dir
 "midi")
(ratings_file
 "ratings.dat")
(song_template
 (name foo)
 (song
  (name foo)
  (path path)
  (tracks
   ((guitar
     (0 1))))
  (pans
   (NaN 9.1835e-41))
  (vols
   (0 0))
  (cores
   (-1 -1))
  (duration 0))
 (midi_file foo)
 (artist BangCamaro)
 (title foo))
(visualizer
 (journeys
  (deep_sea
   (deep_sea_horizon_a
    (A_jellyfish_single_1.mesh 0 40)
    (A_kelp_04.mesh 0 94)
    (A_diver.mesh 20 95)
    (A_shark.mesh 56 100)
    (A_kelp_02.mesh 0 94)
    (A_jellyfish_single_2.mesh 0 24)
    (A_bubbles_grouped.mesh 90 98)
    (A_bubbles_grouped01.mesh 93 100))
   (deep_sea_horizon_b
    (B_fish_01.mesh 0 33)
    (B_fish_01.mesh 41 75)
    (B_fish_01.mesh 78 105)
    (B_fish_02.mesh 10 44)
    (B_fish_02.mesh 51 89)
    (B_fish_02.mesh 94 110)
    (B_anchor.mesh 30 80)
    (B_treasure.mesh 0 50)
    (B_submarine.mesh 30 125)
    (B_bubbles_grouped.mesh 102 110)
    (B_bubbles_grouped01.mesh 100 108))
   (deep_sea_horizon_c
    (C_shark.mesh 15 60)
    (C_hammershark.mesh 60 110)
    (C_diver02.mesh 0 60)
    (C_shipwreck.mesh 0 60)
    (C_Squid.mesh 30 100)
    (C_swordfish.mesh 20 85 100)
    (C_bubbles_grouped01.mesh 100 110)
    (C_bubbles_grouped.mesh 95 108))
   (deep_sea_horizon_d
    (Plane01.mesh 25 125)
    (D_caveright.mesh 25 125)
    (D_caveleft.mesh 25 125)
    (D_nightfish_11.mesh 30 125)
    (D_nightfish_10.mesh 0 60)
    (D_nightfish_09.mesh 30 125)
    (D_nightfish_08.mesh 30 125)
    (D_nightfish_07.mesh 30 125)
    (D_nightfish_05.mesh 30 125)
    (D_submarine.mesh 0 40)
    (D_nightfish_04.mesh 15 70)
    (D_nightfish_01.mesh 30 125)
    (D_nightfish_02.mesh 30 125)
    (D_nightfish_03.mesh 0 53)))
  (music_fest
   (music_fest_a
    (A_billboard_female.mesh 0 63)
    (A_billboard_male.mesh 0 66)
    (A_tshirt05.mesh 69 94)
    (A_tshirt01.mesh 54 82)
    (A_welcome_sign02.mesh 25 70)
    (A_welcome_sign01.mesh 25 70))
   (music_fest_b
    (B_bus_purple.mesh 0 31)
    (B_bus_purple01.mesh 8 41)
    (B_Stage_06.mesh 47 54)
    (B_Stage_07.mesh 57 63)
    (B_Stage_1.mesh 29 100))
   (music_fest_c
    (C_bus_yellow01.mesh 0 31)
    (C_bus_yellow02.mesh 7 38)
    (C_crowd.mesh 40 100)
    (C_crowd01.mesh 40 100)
    (C_stage_1.mesh 30 100))
   (music_fest_d
    (D_lightbeam.mesh 0 25)
    (D_lightbeam01.mesh 0 25)
    (D_stage_1.mesh 13 125)
    (D_sparkle.mesh 15 125)
    (D_sparkle01.mesh 15 125)
    (D_sparkle01.mesh 15 125)
    (D_sparkle02.mesh 15 125)
    (D_sparkle03.mesh 15 125)))
  (neon_city
   (neon_city_horizon_a
    (A_building_2.mesh 60 96)
    (A_building_3.mesh 28 70)
    (A_building_oragne_r.mesh 0 50)
    (A_building_pink_left.mesh 0 50)
    (A_cloud_01.mesh 0 15)
    (A_cloud_01.mesh 70 95)
    (A_cloud_03.mesh 15 30)
    (A_train_a.mesh 50 60)
    (A_train_b.mesh 50 60)
    (A_train_head.mesh 50 60)
    (A_train_head01.mesh 50 60)
    (A_train_rail02.mesh 35 80)
    (A_train_rail_column_l.mesh 35 80)
    (A_train_rail_column_r.mesh 35 80))
   (neon_city_horizon_b
    (B_buddha.mesh 50 100)
    (B_green_lantern_lrg.mesh 0 100)
    (B_green_lantern_sm.mesh 0 100)
    (B_pagoda_green.mesh 40 75)
    (B_pagoda_pink.mesh 11 41)
    (B_Pagoda_yellow01.mesh 24 60)
    (B_red_lantern_lrg.mesh 0 100)
    (B_red_lantern_sm.mesh 0 100))
   (neon_city_horizon_c
    (C_flame.mesh 30 35)
    (C_flame.mesh 39 43)
    (C_flame.mesh 48 51)
    (C_flame.mesh 56 60)
    (C_flame.mesh 65 69)
    (C_flame.mesh 73 77)
    (C_flame.mesh 82 85)
    (C_godzilla_fire.mesh 25 108)
    (C_slot_04.mesh 32 33)
    (C_slot_04.mesh 40 41)
    (C_slot_04.mesh 66 67)
    (C_slot_04.mesh 74 75)
    (C_slot_04.mesh 83 84)
    (C_slot_04still.mesh 20 32)
    (C_slot_04still.mesh 33 40)
    (C_slot_04still.mesh 41 49)
    (C_slot_04still.mesh 63 66)
    (C_slot_04still.mesh 67 74)
    (C_slot_04still.mesh 75 83)
    (C_slot_04still.mesh 84 90)
    (C_slot_1.mesh 32 33)
    (C_slot_1.mesh 57 58)
    (C_slot_1.mesh 66 67)
    (C_slot_1.mesh 74 75)
    (C_slot_01still.mesh 10 32)
    (C_slot_01still.mesh 33 40)
    (C_slot_01still.mesh 53 57)
    (C_slot_01still.mesh 58 66)
    (C_slot_01still.mesh 67 74)
    (C_slot_01still.mesh 75 77)
    (C_slot_ramen_02.mesh 40 41)
    (C_slot_ramen_02.mesh 48 49)
    (C_slot_ramen_02.mesh 83 84)
    (C_slot_ramen_02still.mesh 0 25)
    (C_slot_ramen_02still.mesh 33 40)
    (C_slot_ramen_02still.mesh 41 48)
    (C_slot_ramen_02still.mesh 49 54)
    (C_slot_ramen_02still.mesh 75 83)
    (C_slot_ramen_02still.mesh 84 100))
   (neon_city_horizon_d
    (D_bldg_chrysler_still.mesh 0 40)
    (D_bldg_green_still.mesh 0 40)
    (D_bldg_robot_still.mesh 0 40)
    (D_monster_building_fire_still.mesh 0 40)
    (D_monster_still.mesh 5 19)
    (D_monster_shake.mesh 19 40)
    (D_monster_still.mesh 40 50)
    (D_bldg_chrysler.mesh 40 50)
    (D_bldg_green.mesh 40 50)
    (D_bldg_robot.mesh 40 50)
    (D_monster_building_fire.mesh 40 50)
    (D_bldg_chrysler_still.mesh 50 60)
    (D_bldg_green_still.mesh 50 60)
    (D_bldg_robot_still.mesh 50 60)
    (D_monster_building_fire_still.mesh 50 60)
    (D_monster_shake.mesh 50 60)
    (D_monster_still.mesh 60 70)
    (D_bldg_chrysler.mesh 60 70)
    (D_bldg_green.mesh 60 70)
    (D_bldg_robot.mesh 60 70)
    (D_monster_building_fire.mesh 60 70)
    (D_monster_shake.mesh 70 80)
    (D_monster_still.mesh 80 90)
    (D_bldg_chrysler_still.mesh 70 80)
    (D_bldg_green_still.mesh 70 80)
    (D_bldg_robot_still.mesh 70 80)
    (D_monster_building_fire_still.mesh 70 80)
    (D_bldg_chrysler.mesh 80 90)
    (D_bldg_green.mesh 80 90)
    (D_bldg_robot.mesh 80 90)
    (D_monster_building_fire.mesh 80 90)
    (D_monster_shake.mesh 90 125)
    (D_bldg_chrysler_still.mesh 90 100)
    (D_bldg_green_still.mesh 90 100)
    (D_bldg_robot_still.mesh 90 100)
    (D_monster_building_fire_still.mesh 90 100)
    (D_bldg_chrysler.mesh 100 125)
    (D_bldg_green.mesh 100 125)
    (D_bldg_robot.mesh 100 125)
    (D_monster_building_fire.mesh 100 125)))
  (sonic_city
   (sonic_city_a
    (bk_brwnstn_01.mesh 0 50)
    (bk_brwnstn_01a.mesh 50 90)
    (bk_brwnstn_02.mesh 0 50)
    (bk_brwnstn_02a.mesh 40 89)
    (bk_brwnstn_left.mesh 20 80)
    (bk_brwnstn_right.mesh 0 64)
    (cloud_01.mesh 0 30)
    (cloud_01.mesh 50 85)
    (cloud_02.mesh 0 80)
    (cloud_03.mesh 0 40))
   (sonic_city_b
    (bridge_left.mesh 0 110)
    (bridge_right.mesh 0 110)
    (bridge_span.mesh 0 110)
    (subway.mesh 18 32)
    (subway.mesh 46 55)
    (subway.mesh 72 83)
    (cloud_04.mesh 35 100)
    (cloud_05.mesh 0 80)
    (cloud_06.mesh 0 40))
   (sonic_city_c
    (bldg_hdphones.mesh 50 95)
    (bldg_java.mesh 25 90)
    (bldg_leg.mesh 65 100)
    (bldg_sexy.mesh 5 60)
    (bldg_yummy.mesh 1 60)
    (cloud_07.mesh 50 90)
    (cloud_08.mesh 5 80)
    (cloud_09.mesh 0 69)
    (cloud_09.mesh 75 100))
   (sonic_city_d
    (beam01.mesh 0 125)
    (beam02.mesh 0 125)
    (bg_skyline.mesh 0 125)
    (chopper.mesh 0 38)
    (chopper.mesh 80 110)
    (highrise_02.mesh 0 50)
    (highrise_04.mesh 5 125)))
  (robot_factory
   (robot_factory_a
    (A_machine.mesh 26 70)
    (A_pipe_large_02.mesh 0 34)
    (A_pipes_01.mesh 0 95)
    (A_pipes_02.mesh 0 95))
   (robot_factory_b
    (B_arms01.mesh 33 47)
    (B_arms02.mesh 46 61)
    (B_Conveyor_belt.mesh 5 34)
    (B_Conveyor_belt03.mesh 64 91)
    (B_Conveyor_body.mesh 12 34)
    (B_Conveyor_legs01.mesh 62 91)
    (B_pipes_03.mesh 0 98)
    (B_pipes_05.mesh 0 98))
   (robot_factory_c
    (C_arm_with_head.mesh 10 20)
    (C_arm_with_head.mesh 30 40)
    (C_arm_with_head.mesh 50 60)
    (C_arm_with_head.mesh 70 80)
    (C_Conveyor_belt08.mesh 5 98)
    (C_Conveyor_heads_01.mesh 10 30)
    (C_Conveyor_heads_01.mesh 50 70)
    (C_Conveyor_heads_02.mesh 30 51)
    (C_Conveyor_heads_02.mesh 70 90)
    (C_wheel_01.mesh 0 100)
    (C_wheel_02.mesh 0 100)
    (C_wheel_04.mesh 0 100)
    (C_pipe_furnace_left_still.mesh 19 24)
    (C_pipe_furnace_left.mesh 24 27)
    (C_pipe_furnace_left_still.mesh 27 32)
    (C_pipe_furnace_left_still.mesh 59 64)
    (C_pipe_furnace_left.mesh 64 67)
    (C_pipe_furnace_left_still.mesh 67 72)
    (C_pipe_furnace_right_still.mesh 39 44)
    (C_pipe_furnace_right.mesh 44 47)
    (C_pipe_furnace_right_still.mesh 47 52)
    (C_pipe_furnace_right_still.mesh 79 84)
    (C_pipe_furnace_right.mesh 84 87)
    (C_pipe_furnace_right_still.mesh 87 92))
   (robot_factory_d
    (D_Factories.mesh 0 43)
    (D_Factories01.mesh 0 43)
    (D_robot_leftarm.mesh 50 125)
    (D_robot_rightarm.mesh 50 125)
    (D_robot_half01.mesh 30 125)))
  (alien_planet
   (alien_planet_horizon_a
    (A_background_scroll.mesh 0 85)
    (A_planet_round.mesh 0 75)
    (A_space_ship_01.mesh 55 75)
    (A_meteor.mesh 76 100)
    (A_meteor02.mesh 80 100)
    (A_building_01.mesh 0 25)
    (A_building_02.mesh 0 16)
    (A_guitar_ship.mesh 27 51))
   (alien_planet_horizon_b
    (B_background_scroll.mesh 0 95)
    (B_spaceship_02.mesh 26 62)
    (B_meteor.mesh 60 80)
    (B_planet_doublering.mesh 80 100)
    (B_spaceship_01.mesh 80 100))
   (alien_planet_horizon_c
    (C_background_scroll.mesh 0 95)
    (C_spacewalk.mesh 20 90)
    (C_planet_buildings.mesh 15 90)
    (C_guitar_ship.mesh 85 100))
   (alien_planet_horizon_d
    (D_background_scroll.mesh 0 125)
    (D_purple_cloud_01.mesh 70 100)
    (D_purple_cloud_03.mesh 70 100)
    (D_purple_cloud_04.mesh 0 44)
    (D_purple_cloud_05.mesh 0 44)
    (D_spaceship_02.mesh 37 124)
    (D_spaceship_03.mesh 124 125))))
 (journey_names visualizer_deep_sea visualizer_music_festival visualizer_neon_city visualizer_sonic_city visualizer_robot_factory visualizer_alien_planet)
 (track_offset 1.37753e-40))
(ui
 (init
  {new
   UIPanel
   highlight_panel
   (file
    "ui/main_pill_overlay.milo")
   (select 0)
   (select_frames 15)
   (enter
    {set
     [select]
     0})
   (move_pill
    ($panel $frame)
    {$this select_pill 0}
    {{sprintf
      "%s.grp"
      {$panel name}}
     set_frame
     $frame})
   (select_pill
    ($selecting)
    {set
     [select]
     $selecting}
    {if
     [select]
     {set
      [select_frames]
      15}})
   (anim_pill
    ($filter)
    {$filter
     set_frame
     {'*'
      30
      {taskmgr ui_seconds}}})
   (poll
    {if_else
     [select]
     {do
      {$this anim_pill selected.filt}
      {--
       [select_frames]}
      {if
       {<=
        [select_frames]
        0}
       {set
        [select]
        0}}}
     {$this anim_pill UITrigger_loop.filt}})}
  {new
   UIPanel
   horizon_panel
   (file
    {do
     ($journey
      {game get_journey})
     {sprintf
      "visualizer/%s/%s_horizon.milo"
      $journey
      $journey}})
   (enter
    {do
     {game add_sink $this}
     {$this set_showing 1}})
   (exit
    {do
     {game remove_sink $this}
     {$this set_showing 0}})}
  {new
   UIPanel
   ground_panel
   (file
    {do
     ($journey
      {game get_journey})
     {sprintf
      "visualizer/%s/%s_ground.milo"
      $journey
      $journey}})
   (enter
    {$this set_showing 1})
   (exit
    {$this set_showing 0})}
  {new
   HudPanel
   hud_panel
   (file
    "hud/hud_elements.milo")
   (on_error
    ($text)
    {error_message.lbl set_showing 1}
    {error_message.lbl set_localized $text})
   (update_beat
    ($beat))}
  {new
   GamePanel
   game
   (file
    "track/track.milo")
   (enter
    {set $game_over 0}
    {game set_showing 0}
    {game clear_resume_attempt}
    {fail.grp set_frame 0})
   (intro_over
    {game enable_player 1}
    {game set_showing 1}
    kDataUnhandled)
   (flash_fail
    {fail.grp
     animate
     (loop 0 10)})
   (stop_flash_fail
    {fail.grp stop_animation}
    {fail.grp set_frame 0})
   (on_state_down
    ($state))
   (on_state_up
    ($state)
    {meter_bump.tnm animate})
   (update_survival_meter
    ($frame))
   (exit
    {synth stop_all_sfx}
    {set
     $final_score
     {game get_score}})
   (win
    {$this end_game}
    {$this on_song_won}
    {game kill_song}
    {script_task
     (units 2)
     (delay 1.83671e-40)
     (script
      {ui push_screen end_win_screen})})
   (lose
    {$this end_game}
    {$this on_song_lost}
    {$this stop_flash_fail}
    {game kill_song}
    {script_task
     (units 2)
     (delay 9.1835e-41)
     (script
      {game_screen set_paused 1}
      {if_else
       {'||'
        {game arcade_in_progress}
        {game arcade_is_lost}}
       {ui push_screen arcade_lose_screen}
       {ui push_screen end_lose_screen}})})
   (retire_song
    {$this end_game}
    {$this stop_flash_fail}
    {game kill_song})
   (end_game
    {set $game_over 1}
    {game enable_player 0})
   (miss
    {play_sfx miss.cue})
   (hit
    {play_sfx gem_hit.cue})
   (pass
    {play_sfx gem_pass.cue})
   (on_song_won
    {play_sfx win.cue})
   (on_song_lost
    {play_sfx lose.cue})}
  {new
   MetaPanel
   meta
   (foo)}
  {new
   UIScreen
   game_screen
   (panels horizon_panel ground_panel game hud_panel)
   (focus game)
   (set_paused
    ($p)
    {game set_paused $p}
    {hud_panel set_paused $p}
    {if
     {'||'
      {! $game_over}
      {! $p}}
     {synth pause_all_sfx $p}})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {if
       {! $game_over}
       {$this set_paused 1}
       {hud_panel pause}
       {if_else
        {game arcade_in_progress}
        {do
         {pause_arcade_panel set just_paused 1}
         {ui push_screen pause_arcade_screen}}
        {do
         {pause_panel set just_paused 1}
         {ui push_screen pause_screen}}}})
     kDataUnhandled})}
  {new
   UIPanel
   end_bg_panel
   (file
    "ui/end_bg.milo")
   (set_battery
    ($frame $color $charging)
    {if
     {exists battery.grp}
     {battery.grp set_frame $frame}}
    {if
     {exists battery_fill.mat}
     {battery_fill.mat set color $color}}
    {if
     {exists battery_charging.mesh}
     {if_else
      $charging
      {battery_charging.mesh set_showing 1}
      {battery_charging.mesh set_showing 0}}})}
  {new
   UIPanel
   pause_panel
   (file
    "ui/pause.milo")
   (focus resume.but)
   (just_paused 0)
   (enter
    {if
     [just_paused]
     {$this set_focus resume.but}
     {set
      [just_paused]
      0}}
    {hud_panel show_see_thru_hostile 0}
    {$this
     set_highlight
     {$this focus_name}})
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (resume.but 0)
      (volume.but 1)
      (options.but 2)
      (restart.but 3)
      (abandon.but 4)
      (exit.but 5)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)}
  {new
   UIScreen
   pause_screen
   (panels end_bg_panel highlight_panel pause_panel)
   (focus pause_panel)
   (cheat_enable
    {ui goto_screen ipod_cheats_screen})
   (cheat_steps 0)
   (cheat_click
    ($left $right)
    {cond
     ({&&
       {<
        [cheat_steps]
        3}
       $left}
      {'++'
       [cheat_steps]})
     ({&&
       {<
        [cheat_steps]
        3}
       $right}
      {set
       [cheat_steps]
       0})
     ({&&
       {<
        [cheat_steps]
        6}
       $right}
      {'++'
       [cheat_steps]})
     ({&&
       {<
        [cheat_steps]
        6}
       $left}
      {set
       [cheat_steps]
       0})
     ({&&
       {<
        [cheat_steps]
        8}
       $left}
      {'++'
       [cheat_steps]})
     ({&&
       {<
        [cheat_steps]
        9}
       $left}
      {do
       {'++'
        [cheat_steps]}
       {$this cheat_enable}})
     (1
      {set
       [cheat_steps]
       0})})
   (enter
    {set
     [cheat_steps]
     0})
   (component_select
    ($component $player_num)
    {switch
     $component
     (resume.but
      {$this resume})
     (restart.but
      {choke_screen set next game_loading_screen}
      {ui pop_screen choke_screen})
     (abandon.but
      {ui goto_screen pause_abandon_confirm_screen})
     (exit.but
      {game exit_midsong})
     (options.but
      {ui goto_screen pause_options_screen})
     (volume.but
      {ui goto_screen pause_global_volume_screen})})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {ui goto_screen pause_exit_confirm_screen 0 1})
     (7
      {$this cheat_click 1 0})
     (5
      {$this cheat_click 0 1})
     kDataUnhandled})
   (resume
    {hud_panel start_countdown}
    {ui pop_screen})}
  {new
   UIPanel
   pause_arcade_panel
   (file
    "ui/arcade_pause.milo")
   (focus resume.but)
   (just_paused 0)
   (enter
    {if
     [just_paused]
     {$this set_focus resume.but}
     {set
      [just_paused]
      0}}
    {hud_panel show_see_thru_hostile 0}
    {$this
     set_highlight
     {$this focus_name}})
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (resume.but 0)
      (volume.but 1)
      (options.but 2)
      (abandon.but 3)
      (exit.but 4)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)}
  {new
   UIScreen
   pause_arcade_screen
   (panels end_bg_panel highlight_panel pause_arcade_panel)
   (focus pause_arcade_panel)
   (cheat_enable
    {ui goto_screen ipod_cheats_screen})
   (cheat_steps 0)
   (cheat_click
    ($left $right)
    {cond
     ({&&
       {<
        [cheat_steps]
        3}
       $left}
      {'++'
       [cheat_steps]})
     ({&&
       {<
        [cheat_steps]
        3}
       $right}
      {set
       [cheat_steps]
       0})
     ({&&
       {<
        [cheat_steps]
        6}
       $right}
      {'++'
       [cheat_steps]})
     ({&&
       {<
        [cheat_steps]
        6}
       $left}
      {set
       [cheat_steps]
       0})
     ({&&
       {<
        [cheat_steps]
        8}
       $left}
      {'++'
       [cheat_steps]})
     ({&&
       {<
        [cheat_steps]
        9}
       $left}
      {do
       {'++'
        [cheat_steps]}
       {$this cheat_enable}})
     (1
      {set
       [cheat_steps]
       0})})
   (enter
    {set
     [cheat_steps]
     0})
   (component_select
    ($component $player_num)
    {switch
     $component
     (resume.but
      {$this resume})
     (abandon.but
      {ui goto_screen pause_abandon_confirm_screen})
     (exit.but
      {game exit_midsong})
     (options.but
      {ui goto_screen pause_options_screen})
     (volume.but
      {ui goto_screen pause_global_volume_screen})})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {ui goto_screen pause_exit_confirm_screen 0 1})
     (7
      {$this cheat_click 1 0})
     (5
      {$this cheat_click 0 1})
     kDataUnhandled})
   (resume
    {hud_panel start_countdown}
    {ui pop_screen})}
  {new
   UIPanel
   pause_exit_confirm_panel
   (file
    "ui/pause_exit_confirm.milo")
   (focus option_top.but)
   (enter
    {$this set_focus option_top.but}
    {heading.lbl
     set
     text_token
     "nyi_pause_save_exit_command"}
    {description.lbl
     set
     text_token
     "exit_save_long_description"}
    {option_top.but
     set
     text_token
     "generic_yes"}
    {option_bottom.but
     set
     text_token
     "generic_no"}
    {$this
     set_highlight
     {$this focus_name}})
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (option_top.but 0)
      (option_bottom.but 1)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)
   (component_select
    ($component $player_num)
    {switch
     $component
     (option_top.but
      {game exit_midsong})
     (option_bottom.but
      {$this back_to_pause})
     kDataUnhandled})
   (back_to_pause
    {if_else
     {game arcade_in_progress}
     {ui goto_screen pause_arcade_screen}
     {ui goto_screen pause_screen}})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {game exit_midsong})
     kDataUnhandled})}
  {new
   UIScreen
   pause_exit_confirm_screen
   (panels end_bg_panel highlight_panel pause_exit_confirm_panel)
   (focus pause_exit_confirm_panel)}
  {new
   UIPanel
   pause_abandon_confirm_panel
   (file
    "ui/pause_exit_confirm.milo")
   (focus option_top.but)
   (enter
    {$this set_focus option_top.but}
    {heading.lbl
     set
     text_token
     "nyi_pause_abandon_command"}
    {description.lbl
     set
     text_token
     "exit_abandon_long_description"}
    {option_top.but
     set
     text_token
     "generic_yes"}
    {option_bottom.but
     set
     text_token
     "generic_no"}
    {$this
     set_highlight
     {$this focus_name}})
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (option_top.but 0)
      (option_bottom.but 1)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)
   (back_to_pause
    {if_else
     {game arcade_in_progress}
     {ui goto_screen pause_arcade_screen}
     {ui goto_screen pause_screen}})
   (abandon
    {game abandon}
    {if_else
     {game arcade_in_progress}
     {do
      {game arcade_retire}
      {ui goto_screen arcade_lose_screen}}
     {do
      {game cancel_resume}
      {choke_screen set next main_screen}
      {ui pop_screen choke_screen}}})
   (component_select
    ($component $player_num)
    {switch
     $component
     (option_top.but
      {$this abandon})
     (option_bottom.but
      {$this back_to_pause})
     kDataUnhandled})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {$this abandon})
     kDataUnhandled})}
  {new
   UIScreen
   pause_abandon_confirm_screen
   (panels end_bg_panel highlight_panel pause_abandon_confirm_panel)
   (focus pause_abandon_confirm_panel)}
  {new
   UIPanel
   ipod_cheats_panel
   (file
    "ui/ipod_cheats.milo")
   (focus autoplay.but)
   (enter
    {autoplay.but
     set_localized
     {if_else
      {game is_autoplay}
      "Autoplay: On"
      "Autoplay: Off"}}
    {freeze.but
     set_localized
     {if_else
      {game health_frozen}
      "Freeze Hearts: On"
      "Freeze Hearts: Off"}}
    {if
     {game all_levels_unlocked}
     {unlock.but
      set_localized
      "Unlock Cheat ACTIVE"}}
    {$this
     set_highlight
     {$this focus_name}})
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (autoplay.but 0)
      (freeze.but 1)
      (win.but 2)
      (lose.but 3)
      (unlock.but 4)
      (back.but 5)
      (back_pause.but 6)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)}
  {new
   UIScreen
   ipod_cheats_screen
   (panels end_bg_panel highlight_panel ipod_cheats_panel)
   (focus ipod_cheats_panel)
   (component_select
    ($component $player_num)
    {switch
     $component
     (autoplay.but
      {game toggle_autoplay}
      {$this resume})
     (freeze.but
      {game toggle_freeze_health}
      {$this resume})
     (win.but
      {script_task
       (units 0)
       (delay 9.183e-42)
       (script
        {game win_cheat})}
      {$this resume})
     (lose.but
      {script_task
       (units 0)
       (delay 9.183e-42)
       (script
        {game lose_cheat})}
      {$this resume})
     (unlock.but
      {game unlock_all_levels}
      {$this resume})
     (back_pause.but
      {ui pop_screen})
     (back.but
      {$this resume})})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {$this resume})
     kDataUnhandled})
   (resume
    {hud_panel resume}
    {game_screen set_paused 0}
    {ui pop_screen})}
  {new
   UIPanel
   end_lose_panel
   (file
    "ui/end_lose.milo")
   (enter
    {$this set_focus replay_song.but}
    {$this
     set_highlight
     {$this focus_name}})
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (replay_song.but 0)
      (next_song.but 1)
      (exit.but 2)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)}
  {new
   UIScreen
   end_lose_screen
   (panels end_bg_panel highlight_panel end_lose_panel)
   (focus end_lose_panel)
   (enter
    {hud_panel show_see_thru_hostile 0})
   (prev_song
    {{game track_provider}
     set_prev_song_id}
    {game set_song}
    {choke_screen set next game_loading_screen}
    {ui pop_screen choke_screen})
   (next_song
    {{game track_provider}
     set_next_song_id}
    {game set_song}
    {choke_screen set next game_loading_screen}
    {ui pop_screen choke_screen})
   (component_select
    ($component $player_num)
    {switch
     $component
     (replay_song.but
      {choke_screen set next game_loading_screen}
      {ui pop_screen choke_screen})
     (next_song.but
      {$this next_song})
     (exit.but
      {choke_screen set next sel_song_screen}
      {ui pop_screen choke_screen})})
   (button_down
    ($button $player_num)
    {switch
     $button
     (7
      {$this prev_song})
     (5
      {$this next_song})
     (8
      {choke_screen set next main_screen}
      {ui pop_screen choke_screen})
     kDataUnhandled})}
  {new
   UIPanel
   end_win_panel
   (file
    "ui/end_win.milo")
   (focus ok.but)
   (anims_done 0)
   {anim_all.grp set_frame 0}
   (score 0)
   (start_score 0)
   (score_increase 0)
   (final_score 0)
   (extra_stars_bonus 0)
   (hearts_bonus 0)
   (increment_unit 0)
   (poll_enabled 0)
   (anim_level 0)
   (last_poll_seconds 0)
   (last_sound_poll_seconds 0)
   (new_heart 0)
   (hearts 0)
   (streak 0)
   (stars 0)
   (extra_stars 0)
   (accuracy 0)
   (enter
    {hud_panel show_see_thru_hostile 0}
    {if_else
     {==
      [new_heart]
      1}
     {hearts.lbl
      set_localized
      {sprint
       {-
        [hearts]
        1}}}
     {hearts.lbl
      set_localized
      {sprint
       [hearts]}}}
    {accuracy.lbl
     set_localized
     {sprintf
      {localize
       "win_accuracy"}
      [accuracy]}}
    {longest_streak.lbl
     set_localized
     {sprintf
      {localize
       "win_streak"}
      [streak]}}
    {stars.lbl
     set_localized
     {sprint
      [stars]}}
    {extra_stars.lbl
     set_localized
     {sprint
      [extra_stars]}}
    {$this update_score_labels}
    {anim_all.grp set_frame 0}
    {if_else
     {game arcade_is_inactive}
     {do
      {high_score.lbl set text_token win_new_high_score}
      {high_score.lbl
       set_showing
       {game win_high_score}}}
     {if_else
      {game arcade_is_won}
      {do
       {high_score.lbl
        set_localized
        ""}}
      {do
       ($stage
        {game arcade_get_stage})
       {high_score.lbl set_showing 1}
       {if_else
        {< $stage 5}
        {high_score.lbl
         set_localized
         {sprintf
          {localize
           "loading_songs_to_go_fmt"}
          {- 6 $stage}}}
        {high_score.lbl
         set
         text_token
         "loading_final_song"}}}}}
    {accuracy.lbl set_showing 1}
    {longest_streak.lbl set_showing 1}
    {set
     [anims_done]
     0}
    {set
     [poll_enabled]
     0}
    {set
     [last_poll_seconds]
     0}
    {set
     [last_sound_poll_seconds]
     0}
    {set
     [anim_level]
     0}
    {set
     [score_increase]
     0}
    {$this next_anim})
   (anim_stars
    {if
     {!
      [anims_done]}
     {anim_01.grp animate}
     {script_task
      (units 2)
      (delay 3.1224e-41)
      (script
       {$this next_anim})}})
   (anim_extra_stars
    {if
     {!
      [anims_done]}
     {anim_02.grp animate}
     {set
      [increment_unit]
      {max
       100
       {/
        {int
         [extra_stars_bonus]}
        30}}}
     {script_task
      (units 2)
      (delay 3.1224e-41)
      (script
       {$this reset_poll_time})}})
   (anim_hearts
    {if
     {!
      [anims_done]}
     {anim_03.grp animate}
     {set
      [increment_unit]
      {max
       100
       {/
        {int
         [hearts_bonus]}
        30}}}
     {script_task
      (units 2)
      (delay 3.1224e-41)
      (script
       {$this reset_poll_time})}})
   (anim_high_score
    {if
     {!
      [anims_done]}
     {anim_04.grp animate}
     {script_task
      (units 2)
      (delay 3.1224e-41)
      (script
       {$this next_anim})}})
   (on_new_heart
    {play_sfx new_star.cue})
   (anim_new_heart
    {hearts.lbl
     set_localized
     {sprint
      [hearts]}}
    {set
     [new_heart]
     0}
    {anim_hearts.grp animate}
    {$this on_new_heart}
    {script_task
     (units 2)
     (delay 3.1224e-41)
     (script
      {$this next_anim})})
   (reset_poll_time
    {if
     {!
      [anims_done]}
     {set
      [last_poll_seconds]
      {taskmgr ui_seconds}}
     {set
      [last_sound_poll_seconds]
      {taskmgr ui_seconds}}
     {set
      [poll_enabled]
      1}})
   (poll
    {if
     {&&
      [poll_enabled]
      {!
       [anims_done]}}
     {do
      ($now_seconds
       {taskmgr ui_seconds})
      ($frames
       {int
        {'*'
         {-
          $now_seconds
          [last_poll_seconds]}
         30}})
      {if
       {>=
        {-
         $now_seconds
         [last_sound_poll_seconds]}
        4.59e-42}
       {play_sfx sweep3.cue}
       {set
        [last_sound_poll_seconds]
        $now_seconds}}
      {if
       {> $frames 0}
       {set
        [last_poll_seconds]
        $now_seconds}
       {cond
        ({&&
          {>
           [extra_stars_bonus]
           0}
          {==
           [anim_level]
           2}}
         {do
          ($increment
           {min
            [extra_stars_bonus]
            [increment_unit]})
          {-=
           [extra_stars_bonus]
           $increment}
          {'+='
           [score_increase]
           $increment}
          {$this update_score_labels}
          {if
           {==
            [extra_stars_bonus]
            0}
           {$this next_anim}}})
        ({&&
          {>
           [hearts_bonus]
           0}
          {==
           [anim_level]
           3}}
         {do
          ($increment
           {min
            [hearts_bonus]
            [increment_unit]})
          {-=
           [hearts_bonus]
           $increment}
          {'+='
           [score_increase]
           $increment}
          {$this update_score_labels}
          {if
           {==
            [hearts_bonus]
            0}
           {$this next_anim}}})
        (1
         {$this next_anim})}}}})
   (skip_increment
    {anim_01.grp stop_animation}
    {anim_02.grp stop_animation}
    {anim_03.grp stop_animation}
    {anim_04.grp stop_animation}
    {set
     [poll_enabled]
     0}
    {set
     [anims_done]
     1}
    {set
     [extra_stars_bonus]
     0}
    {set
     [hearts_bonus]
     0}
    {set
     [start_score]
     [final_score]}
    {set
     [score_increase]
     0}
    {$this update_score_labels}
    {set
     [anim_level]
     4}
    {anim_all.grp set_frame 10}
    {if
     {==
      [new_heart]
      1}
     {$this anim_new_heart}}
    {$this screen_continue_delay})
   (next_anim
    {if
     {!
      [anims_done]}
     {set
      [poll_enabled]
      0}
     {'++'
      [anim_level]}
     {switch
      [anim_level]
      (1
       {$this anim_stars})
      (2
       {$this anim_extra_stars})
      (3
       {$this anim_hearts})
      (4
       {$this anim_high_score})
      {do
       {if_else
        {==
         [new_heart]
         1}
        {$this anim_new_heart}
        {set
         [anims_done]
         1}}
       {$this screen_continue_delay}}}})
   (win_panel_set_stats
    ($stars $extra_stars $streak $accuracy)
    {set
     [stars]
     $stars}
    {set
     [extra_stars]
     $extra_stars}
    {set
     [streak]
     $streak}
    {set
     [accuracy]
     $accuracy})
   (win_panel_set_hearts
    ($hearts $new_heart)
    {set
     [hearts]
     $hearts}
    {set
     [new_heart]
     $new_heart})
   (update_score_labels
    {set
     [score]
     {min
      [final_score]
      {'+'
       [start_score]
       [score_increase]}}}
    {score.lbl
     set_localized
     {sprint
      {localize_separated_int
       [score]}}}
    {extra_stars_bonus.lbl
     set_localized
     {sprint
      "+ "
      {localize_separated_int
       [extra_stars_bonus]}}}
    {if_else
     {>
      [extra_stars_bonus]
      0}
     {extra_stars_bonus.lbl set_showing 1}
     {extra_stars_bonus.lbl set_showing 0}}
    {hearts_bonus.lbl
     set_localized
     {sprint
      "+ "
      {localize_separated_int
       [hearts_bonus]}}}
    {if_else
     {>
      [hearts_bonus]
      0}
     {hearts_bonus.lbl set_showing 1}
     {hearts_bonus.lbl set_showing 0}})
   (screen_continue_delay
    {if
     {!
      {exists screen_continue_task}}
     {script_task
      (units 2)
      (delay 9.18355e-40)
      (name screen_continue_task)
      (script
       {$this screen_continue_prompt})}})
   (screen_continue_prompt
    {set
     [poll_enabled]
     0}
    {accuracy.lbl set_showing 0}
    {longest_streak.lbl
     set
     text_token
     "end_arcade_continue_prompt"}
    {high_score.lbl set_showing 0}
    {$this screen_continue_flash 1})
   (screen_continue_flash
    ($on)
    {if
     {!
      {end_win_screen get leaving_screen}}
     {longest_streak.lbl set_showing $on}
     {script_task
      (units 2)
      (delay 4.5918e-41)
      (script
       {$this
        screen_continue_flash
        {! $on}})}})
   (win_panel_set_scores
    ($score $start_score $extra_stars_bonus $hearts_bonus)
    {set
     [start_score]
     {int $start_score}}
    {set
     [score_increase]
     0}
    {set
     [final_score]
     {int $score}}
    {set
     [extra_stars_bonus]
     $extra_stars_bonus}
    {set
     [hearts_bonus]
     $hearts_bonus})}
  {new
   UIScreen
   end_win_screen
   (panels end_bg_panel end_win_panel)
   (focus end_win_panel)
   (leaving_screen 0)
   (enter
    {game_screen set_paused 1}
    {set
     [leaving_screen]
     0})
   (screen_continue
    {if
     {==
      [leaving_screen]
      0}
     {set
      [leaving_screen]
      1}
     {cond
      ({game arcade_is_won}
       {ui goto_screen arcade_post_win_screen})
      ({game arcade_in_progress}
       {game set_song}
       {choke_screen set next game_loading_screen}
       {ui pop_screen choke_screen})
      (1
       {ui goto_screen end_post_win_screen})}})
   (component_select
    ($component $player_num)
    {if_else
     {==
      {end_win_panel get anims_done}
      1}
     {$this screen_continue}
     {end_win_panel skip_increment}})}
  {new
   UIPanel
   end_post_win_panel
   (file
    "ui/end_post_win.milo")
   (enter
    {$this set_focus next_song.but}
    {$this
     set_highlight
     {$this focus_name}})
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (next_song.but 0)
      (replay.but 1)
      (exit.but 2)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)}
  {new
   UIScreen
   end_post_win_screen
   (panels end_bg_panel highlight_panel end_post_win_panel)
   (focus end_post_win_panel)
   (enter)
   (prev_song
    {{game track_provider}
     set_prev_song_id}
    {game set_song}
    {choke_screen set next game_loading_screen}
    {ui pop_screen choke_screen})
   (next_song
    {{game track_provider}
     set_next_song_id}
    {game set_song}
    {choke_screen set next game_loading_screen}
    {ui pop_screen choke_screen})
   (component_select
    ($component $player_num)
    {switch
     $component
     (replay.but
      {choke_screen set next game_loading_screen}
      {ui pop_screen choke_screen})
     (exit.but
      {choke_screen set next sel_song_screen}
      {ui pop_screen choke_screen})
     (next_song.but
      {$this next_song})})
   (button_down
    ($button $player_num)
    {switch
     $button
     (7
      {$this prev_song})
     (5
      {$this next_song})
     (8
      {choke_screen set next main_screen}
      {ui pop_screen choke_screen})
     kDataUnhandled})}
  {new
   UIPanel
   shell_bg_panel
   (file
    "ui/shell_bg.milo")
   (enter)
   (set_battery
    ($frame $color $charging)
    {if
     {exists battery.grp}
     {battery.grp set_frame $frame}}
    {if
     {exists battery_fill.mat}
     {battery_fill.mat set color $color}}
    {if
     {exists battery_charging.mesh}
     {if_else
      $charging
      {battery_charging.mesh set_showing 1}
      {battery_charging.mesh set_showing 0}}})}
  {new
   UIPanel
   main_panel
   (file
    "ui/main.milo")
   (enter
    {if
     {exists heap_report}
     {notify
      "Writing heap report"}
     {heap_report}}
    {$this
     set_highlight
     {$this focus_name}})
   (focus playgame.but)
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (playgame.but 0)
      (playarcade.but 1)
      (volume.but 2)
      (options.but 3)
      (high_scores.but 4)
      (help.but 5)
      (exit.but 6)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)
   (component_select
    ($component $player_num)
    {switch
     $component
     (playgame.but
      {do
       {{game song_provider}
        reset}
       {if_else
        {&&
         {game no_songs_available}
         {!
          {shell_no_songs_screen get visited_screen}}}
        {do
         {shell_no_songs_screen set from_arcade 0}
         {ui goto_screen shell_no_songs_screen}}
        {ui goto_screen sel_song_screen}}})
     (playarcade.but
      {ui goto_screen arcade_start_level_screen})
     (high_scores.but
      {high_scores_menu_panel set focus_check 1}
      {ui goto_screen high_scores_menu_screen})
     (exit.but
      {game exit})
     (options.but
      {ui goto_screen main_options_screen})
     (volume.but
      {ui goto_screen main_global_volume_screen})
     (help.but
      {ui goto_screen help_screen_01})})}
  {new
   UIScreen
   main_screen
   (panels shell_bg_panel highlight_panel main_panel meta)
   (focus main_panel)
   (back main_exit_confirm_screen)
   (enter
    {foreach
     $panel
     (sel_song_panel arcade_song_list_panel sel_difflevel_panel)
     {$panel load}})}
  {new
   UIPanel
   resume_panel
   (file
    "ui/resume.milo")
   (focus resume.but)
   (reset_focus 1)
   (enter
    {title.lbl
     set_localized
     {{game track_provider}
      get_current_song_name}}
    {$this
     set_highlight
     {$this focus_name}})
   (resume
    {choke_screen set next game_loading_screen}
    {ui goto_screen choke_screen})
   (cancel_resume
    {ui goto_screen shell_abandon_confirm_screen})
   (cancel_resume_now
    {game cancel_resume}
    {game clear_resume_attempt}
    {game abandon}
    {ui goto_screen main_screen})
   (component_select
    ($component $player_num)
    {switch
     $component
     (resume.but
      {$this resume})
     (quit.but
      {$this cancel_resume_now})})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {$this cancel_resume})
     kDataUnhandled})
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (resume.but 0)
      (quit.but 1)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)}
  {new
   UIScreen
   resume_screen
   (panels shell_bg_panel highlight_panel resume_panel meta)
   (focus resume_panel)}
  {new
   UIPanel
   shell_abandon_confirm_panel
   (file
    "ui/shell_abandon_confirm.milo")
   (focus resume.but)
   (reset_focus 1)
   (enter
    {$this set_focus option_top.but}
    {$this
     set_highlight
     {$this focus_name}})
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (option_top.but 0)
      (option_bottom.but 1)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)
   (abandon
    {game cancel_resume}
    {game clear_resume_attempt}
    {game abandon}
    {ui goto_screen main_screen})
   (component_select
    ($component $player_num)
    {switch
     $component
     (option_top.but
      {$this abandon})
     (option_bottom.but
      {ui goto_screen resume_screen})
     kDataUnhandled})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {$this abandon})
     kDataUnhandled})}
  {new
   UIScreen
   shell_abandon_confirm_screen
   (panels shell_bg_panel highlight_panel shell_abandon_confirm_panel meta)
   (focus shell_abandon_confirm_panel)}
  {new
   UIPanel
   resume_flushed_panel
   (file
    "ui/resume_flushed.milo")
   (focus ok.but)
   (reset_focus 1)
   (first_pid
    "")
   (test_first_pid
    "")
   (last_pid
    "")
   (test_last_pid
    "")
   (curr_pid
    "")
   (test_curr_pid
    "")
   (state 0)
   (test_state 0)
   (filter_playlist 0)
   (filter_genre 0)
   (filter_artist 0)
   (filter_album 0)
   (curr_selection 0)
   (saved_num 0)
   (stp_active 0)
   (verify_first
    ($first $test_first)
    {set
     [first_pid]
     $first}
    {set
     [test_first_pid]
     $test_first})
   (verify_last
    ($last $test_last)
    {set
     [last_pid]
     $last}
    {set
     [test_last_pid]
     $test_last})
   (verify_curr
    ($curr $test_curr)
    {set
     [curr_pid]
     $curr}
    {set
     [test_curr_pid]
     $test_curr})
   (verify_states
    ($state $test_state)
    {set
     [state]
     $state}
    {set
     [test_state]
     $test_state})
   (verify_filters
    ($playlist $genre $artist $album)
    {set
     [filter_playlist]
     $playlist}
    {set
     [filter_genre]
     $genre}
    {set
     [filter_artist]
     $artist}
    {set
     [filter_album]
     $album}
    {set
     [curr_selection]
     $curr_sel})
   (verify_tp_state
    ($curr_sel $saved_num $stp_active)
    {set
     [curr_selection]
     $curr_sel}
    {set
     [saved_num]
     $saved_num}
    {set
     [stp_active]
     $stp_active})
   (cheat_enable
    {debug.lbl
     set_localized
     {sprint
      "tp_ver="
      {game get_track_verify_level 0}
      " stp_ver="
      {game get_track_verify_level 1}
      " curr_num="
      {{game track_provider}
       get_items}
      " curr_sel="
      {{game track_provider}
       get_selection}}}
    {debug2.lbl
     set_localized
     {sprint
      "first="
      [first_pid]
      " test_first="
      [test_first_pid]
      " last="
      [last_pid]
      " test_last="
      [test_last_pid]}}
    {debug3.lbl
     set_localized
     {sprint
      "curr="
      [curr_pid]
      " test_curr="
      [test_curr_pid]
      " state="
      [state]
      " test_state="
      [test_state]}}
    {debug4.lbl
     set_localized
     {sprint
      " f_pl="
      [filter_playlist]
      " f_gn="
      [filter_genre]
      " f_ar="
      [filter_artist]
      " f_al="
      [filter_album]
      " tp_sel="
      [curr_selection]
      " saved_num="
      [saved_num]
      " stp_active="
      [stp_active]}}
    {debug.grp set_showing 1}
    {normal.grp set_showing 0})
   (cheat_steps 0)
   (cheat_click
    ($left $right)
    {cond
     ({&&
       {<
        [cheat_steps]
        3}
       $left}
      {'++'
       [cheat_steps]})
     ({&&
       {<
        [cheat_steps]
        3}
       $right}
      {set
       [cheat_steps]
       0})
     ({&&
       {<
        [cheat_steps]
        6}
       $right}
      {'++'
       [cheat_steps]})
     ({&&
       {<
        [cheat_steps]
        6}
       $left}
      {set
       [cheat_steps]
       0})
     ({&&
       {<
        [cheat_steps]
        8}
       $left}
      {'++'
       [cheat_steps]})
     ({&&
       {<
        [cheat_steps]
        9}
       $left}
      {do
       {'++'
        [cheat_steps]}
       {$this cheat_enable}})
     (1
      {set
       [cheat_steps]
       0})})
   (enter
    {set
     [cheat_steps]
     0})
   (continue
    {game clear_resume_attempt}
    {ui goto_screen main_screen})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {$this continue})
     (7
      {$this cheat_click 1 0})
     (5
      {$this cheat_click 0 1})
     kDataUnhandled})
   (component_select
    ($component $player_num)
    {switch
     $component
     (ok.but
      {$this continue})
     kDataUnhandled})}
  {new
   UIScreen
   resume_flushed_screen
   (panels shell_bg_panel resume_flushed_panel meta)
   (focus resume_flushed_panel)}
  {new
   UIPanel
   name_panel
   (file
    "ui/name.milo")
   (back main_options_screen)
   (creating_user 0)
   (focus name.ten)
   (action_success 1)
   (enter
    {name.ten force_start_pos}
    {if_else
     [creating_user]
     {name.ten
      set_text
      ""}
     {name.ten
      set_text
      {game get_user_name}}}
    {$this update_name})
   (exit
    {set
     [action_success]
     1}
    {name.ten
     set_text
     {game
      normalize_user_name
      {name.ten get_text}}}
    {if
     {==
      0
      {name.ten get_text_len}}
     {if
      {'||'
       {==
        {save_file_lp get_items}
        0}
       {&&
        [creating_user]
        {!
         {game is_m1a}}}}
      {name.ten
       set_text
       {name.ten get default_name}}}}
    {if_else
     {&&
      {>
       {name.ten get_text_len}
       0}
      {game
       user_name_valid
       {name.ten get_text}}}
     {if_else
      {&&
       [creating_user]
       {game is_m1a}}
      {game
       add_user
       {name.ten get_text}}
      {game
       set_user_name
       {name.ten get_text}}}
     {set
      [action_success]
      0}})
   (exiting
    {if_else
     {&&
      {&&
       [creating_user]
       [action_success]}
      {game is_m1a}}
     {!
      {game save_file_is_loaded}}
     0})
   (update_name
    {foreach_int
     $i
     0
     9
     {do
      ($label
       {sprintf
        "name0%d.lbl"
        $i})
      ($len
       {name.ten get_text_len})
      ($cursor
       {sprintf
        "name_entry0%d.mnm"
        $i})
      {if_else
       {< $i $len}
       {do
        {$label
         set_localized
         {name.ten get_char $i}}
        {$label set_showing 1}}
       {$label set_showing 0}}
      {$cursor
       set_frame
       {if_else
        {== $len $i}
        1
        0}}}})
   (char_added
    {play_sfx sweep1.cue}
    {$this update_name})
   (char_removed
    {play_sfx back.cue}
    {$this update_name})
   (component_scroll
    ($component $player_num)
    {play_sfx dpad.cue})
   (text_entry_complete
    ($component $text)
    {ui
     goto_screen
     [back]})
   (held_center_down
    {ui
     goto_screen
     [back]})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {ui
       goto_screen
       [back]})
     (9
      {$this held_center_down})
     kDataUnhandled})}
  {new
   UIScreen
   name_screen
   (panels shell_bg_panel name_panel meta)
   (focus name_panel)
   (enter)}
  {new
   UIScreen
   name_screen_initial
   (panels shell_bg_panel name_panel meta)
   (focus name_panel)
   (enter
    {name_panel set back main_screen}
    {if_else
     {game is_m1a}
     {name_panel set creating_user 1}
     {name_panel set creating_user 1}})}
  {new
   UIPanel
   shell_no_songs_panel
   (file
    "ui/shell_no_songs.milo")
   (focus ok.but)
   (enter)}
  {new
   UIScreen
   shell_no_songs_screen
   (panels shell_bg_panel shell_no_songs_panel)
   (focus shell_no_songs_panel)
   (leaving_screen 0)
   (visited_screen 0)
   (from_arcade 0)
   (enter
    {set
     [leaving_screen]
     0}
    {set
     [visited_screen]
     1}
    {script_task
     (units 2)
     (delay 9.18355e-40)
     (script
      {$this leave_screen})})
   (leave_screen
    {if
     {==
      [leaving_screen]
      0}
     {set
      [leaving_screen]
      1}
     {if_else
      [from_arcade]
      {ui goto_screen arcade_song_list_screen}
      {ui goto_screen sel_song_screen}}})
   (button_down
    ($button $player_num)
    {if_else
     {== $button 8}
     {$this leave_screen}
     kDataUnhandled})
   (component_select
    ($component $player_num)
    {$this leave_screen})}
  {new
   UIPanel
   sel_song_panel
   (file
    "ui/sel_song.milo")
   (focus song.lst)
   (set_scrollbar
    ($list)
    {if_else
     {<=
      {$list total_num_items}
      {$list get display_num}}
     {scrollbar.grp set_showing 0}
     {do
      {scrollbar.grp set_showing 1}
      {scrollbar.grp
       set_frame
       {/
        {'*'
         100
         {$list first_showing}}
        {$list max_first_showing}}}}})
   (enter
    {song.lst
     set_provider
     {game song_provider}}
    {song.lst
     set_selected
     {{game song_provider}
      get_selection}
     {{game song_provider}
      get_first_showing}}
    {sel_song.lbl
     set_localized
     {{game song_provider}
      get_label}}
    {$this set_scrollbar song.lst})
   (component_scroll
    ($component $player_num)
    {$this set_scrollbar song.lst})
   (component_select
    ($component $player_num)
    {if_else
     {!=
      {{game song_provider}
       get_items}
      0}
     {do
      {if_else
       {{game song_provider}
        should_start_song}
       {do
        {{game song_provider}
         on_select
         {song.lst selected_pos}
         {song.lst first_showing}}
        {switch
         {{game song_provider}
          get_phase_state
          {song.lst selected_pos}}
         (0
          {game set_song}
          {ui goto_screen sel_difflevel_screen})
         (1
          {song_unplayable_panel set song_state 1}
          {ui goto_screen song_unplayable_screen})
         (2
          {song_unplayable_panel set song_state 2}
          {ui goto_screen song_unplayable_screen})}}
       {do
        {{game song_provider}
         on_select
         {song.lst selected_pos}
         {song.lst first_showing}}
        {while
         {{game song_provider}
          next_provider}
         {song.lst
          set_provider
          {{game song_provider}
           next_provider}}}
        {song.lst
         set_selected
         {{game song_provider}
          get_selection}
         {{game song_provider}
          get_first_showing}}
        {sel_song.lbl
         set_localized
         {{game song_provider}
          get_label}}
        {$this set_scrollbar song.lst}}}}
     kDataUnhandled})
   (button_down
    ($button $player_num)
    {if_else
     {&&
      {== $button 8}
      {{game song_provider}
       can_go_back}}
     {do
      {play_sfx back.cue}
      {{game song_provider}
       on_back
       {song.lst selected_pos}
       {song.lst first_showing}}
      {while
       {{game song_provider}
        next_provider}
       {song.lst
        set_provider
        {{game song_provider}
         next_provider}}}
      {song.lst
       set_selected
       {{game song_provider}
        get_selection}
       {{game song_provider}
        get_first_showing}}
      {sel_song.lbl
       set_localized
       {{game song_provider}
        get_label}}
      {$this set_scrollbar song.lst}}
     kDataUnhandled})}
  {new
   UIScreen
   sel_song_screen
   (panels shell_bg_panel sel_song_panel meta)
   (focus sel_song_panel)
   (back main_screen)}
  {new
   UIPanel
   song_unplayable_panel
   (file
    "ui/shell_dialog.milo")
   (focus ok.but)
   (song_state 0)
   (enter
    {switch
     [song_state]
     (1
      {heading.lbl set text_token song_provider_missing}
      {description.lbl set text_token song_provider_missing_desc})
     (2
      {heading.lbl set text_token song_provider_unplayable}
      {description.lbl set text_token song_provider_unplayable_desc})
     (0
      {heading.lbl
       set_localized
       "error"}
      {description.lbl
       set_localized
       "Song is not unplayable."})})
   (button_down
    ($button $player_num)
    {if_else
     {'||'
      {== $button 8}
      {== $button 11}}
     {ui goto_screen sel_song_screen}
     kDataUnhandled})}
  {new
   UIScreen
   song_unplayable_screen
   (panels shell_bg_panel song_unplayable_panel meta)
   (focus song_unplayable_panel)}
  {new
   UIPanel
   sel_difflevel_panel
   (file
    "ui/sel_level.milo")
   (focus level.lst)
   (enter
    {level_manager_lp
     list_reset
     {game get_unlocked_level}}
    {level.lst set_provider level_manager_lp}
    {level.lst
     set_selected
     {game get_saved_diff_idx}}
    {description.lbl set_showing 0})
   (exit)
   (component_select
    ($component $player_num)
    {switch
     $component
     (level.lst
      {game
       set_saved_diff_idx
       {level.lst selected_pos}}
      {game
       set_game_type
       {level_manager_lp
        get_actual_gametype
        {level.lst selected_pos}}}
      {if_else
       {game is_first_session}
       {ui goto_screen force_help_01_screen}
       {do
        {choke_screen set next game_loading_screen}
        {ui goto_screen choke_screen}}})})}
  {new
   UIScreen
   sel_difflevel_screen
   (panels shell_bg_panel sel_difflevel_panel meta)
   (focus sel_difflevel_panel)
   (back sel_song_screen)}
  {new
   UIPanel
   game_loading_panel
   (file
    {do
     ($journey
      {game get_journey})
     {sprintf
      "ui/loading_%s.milo"
      $journey}})
   (focus loading.lbl)
   (enter
    {do
     {anim.filt animate}})}
  {new
   UIPanel
   loading_tip
   (file
    {do
     {loading_tip
      set
      tip
      {if_else
       {<
        {loading_tip get tip}
        0}
       {random_int 0 15}
       {mod
        {'+'
         1
         {loading_tip get tip}}
        15}}}
     {sprintf
      "ui/loading_tip_%d.milo"
      {'+'
       1
       {loading_tip get tip}}}})
   (tip -1)}
  {new
   UIPanel
   loading_error_check
   (file
    "ui\\loading_error_check.milo")
   (enter
    {error.mesh set_showing 0})
   (show_error
    {error.mesh set_showing 1})}
  {new
   UIPanel
   choke_panel
   (file
    "ui\\loading_star.milo")
   (enter
    {star_anim.filt set_frame 0}
    {star_anim.filt animate})}
  {new
   UIScreen
   choke_screen
   (panels choke_panel)
   (next '')
   (enter
    {ui unload_all_panels}
    {rnd reset}
    {ui
     goto_screen
     [next]})
   (exit
    {if
     {==
      [next]
      game_loading_screen}
     {foreach
      $panel
      (pause_options_screen pause_arcade_screen pause_screen pause_sfx_volume_screen pause_brightness_screen pause_global_volume_screen arcade_lose_screen arcade_post_win_screen end_win_screen end_lose_screen pause_abandon_confirm_screen pause_exit_confirm_screen)
      {$panel load}}})}
  {new
   UIScreen
   game_loading_screen
   (panels game_loading_panel loading_tip loading_error_check)
   (enter
    {game_screen set_paused 0}
    {ui goto_screen game_screen})}
  {new
   UIPanel
   high_scores_menu_panel
   (file
    "ui/high_scores_menu.milo")
   (focus top_songs.but)
   (focus_check 0)
   (no_songs 0)
   (no_marathons 0)
   (check_focus
    {set
     [no_songs]
     {==
      {game get_num_top_songs}
      0}}
    {set
     [no_marathons]
     {==
      {game get_num_top_marathons}
      0}}
    {$this set_focus clear_all.but}
    {top_songs.but
     set_state
     {if_else
      [no_songs]
      2
      0}}
    {top_marathons.but
     set_state
     {if_else
      [no_marathons]
      2
      0}}
    {if_else
     [no_songs]
     {$this set_focus clear_all.but}
     {$this set_focus top_songs.but}}
    {set
     [focus_check]
     0})
   (enter
    {if
     [focus_check]
     {$this check_focus}}
    {total_songs.lbl
     set_localized
     {sprintf
      {localize
       "stats_total_songs"}
      {localize_separated_int
       {game get_stat_total_songs}}}}
    {total_gems.lbl
     set_localized
     {sprintf
      {localize
       "stats_total_gems"}
      {localize_separated_int
       {game get_stat_total_gems}}}}
    {$this
     set_highlight
     {$this focus_name}})
   (component_select
    ($component $player_num)
    {switch
     $component
     (top_marathons.but
      {if_else
       [no_marathons]
       kDataUnhandled
       {do
        {high_marathons_screen set from_arcade 0}
        {ui goto_screen high_marathons_screen}}})
     (top_songs.but
      {if_else
       [no_songs]
       kDataUnhandled
       {ui goto_screen high_top_songs_screen}})
     (clear_all.but
      {ui goto_screen high_clear_all_screen})})
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (top_songs.but 0)
      (top_marathons.but 1)
      (clear_all.but 2)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)}
  {new
   UIScreen
   high_scores_menu_screen
   (panels shell_bg_panel highlight_panel high_scores_menu_panel meta)
   (focus high_scores_menu_panel)
   (back main_screen)}
  {new
   UIPanel
   high_top_songs_panel
   (file
    "ui/top_songs.milo")
   (focus scores.lst)
   (set_scrollbar
    ($list)
    {if_else
     {<=
      {$list total_num_items}
      {$list get display_num}}
     {scrollbar.grp set_showing 0}
     {do
      {scrollbar.grp set_showing 1}
      {scrollbar.grp
       set_frame
       {/
        {'*'
         100
         {$list first_showing}}
        {$list max_first_showing}}}}})
   (update_status_bar
    {difficulty.lbl
     set_localized
     {top_songs_lp
      get_difficulty
      {scores.lst selected_pos}}}
    {stars.lbl
     set_localized
     {top_songs_lp
      get_stars
      {scores.lst selected_pos}}}
    {extra.lbl
     set_localized
     {top_songs_lp
      get_extra_stars
      {scores.lst selected_pos}}})
   (enter
    {scores.lst set_provider top_songs_lp}
    {scores.lst
     set_selected
     {max
      0
      {-
       {game get_new_top_song}
       1}}}
    {$this update_status_bar}
    {heading.lbl set text_token top_song_scores}
    {$this set_scrollbar scores.lst})
   (exit)
   (component_scroll
    ($component $player_num)
    {$this update_status_bar}
    {$this set_scrollbar scores.lst}
    kDataUnhandled)}
  {new
   UIScreen
   high_top_songs_screen
   (panels shell_bg_panel high_top_songs_panel meta)
   (focus high_top_songs_panel)
   (back high_scores_menu_screen)}
  {new
   UIPanel
   high_marathons_panel
   (file
    "ui/top_marathons.milo")
   (focus scores.lst)
   (set_scrollbar
    ($list)
    {if_else
     {<=
      {$list total_num_items}
      {$list get display_num}}
     {scrollbar.grp set_showing 0}
     {do
      {scrollbar.grp set_showing 1}
      {scrollbar.grp
       set_frame
       {/
        {'*'
         100
         {$list first_showing}}
        {$list max_first_showing}}}}})
   (enter
    {scores.lst set_provider top_marathons_lp}
    {if_else
     {>
      {top_marathons_lp get_size}
      0}
     {do
      {scores.lst
       set_selected
       {max
        0
        {-
         {game get_new_top_marathon}
         1}}}
      {description.lbl
       set_localized
       {top_marathons_lp
        get_description
        {scores.lst selected_pos}}}}
     {do
      {scores.lst set_selected 0}
      {description.lbl
       set_localized
       ""}}}
    {heading.lbl set text_token top_marathon_scores}
    {$this set_scrollbar scores.lst})
   (exit)
   (component_scroll
    ($component $player_num)
    {description.lbl
     set_localized
     {top_marathons_lp
      get_description
      {scores.lst selected_pos}}}
    {$this set_scrollbar scores.lst}
    kDataUnhandled)}
  {new
   UIScreen
   high_marathons_screen
   (panels shell_bg_panel high_marathons_panel meta)
   (focus high_marathons_panel)
   (from_arcade 0)
   (button_down
    ($button $player_num)
    {if_else
     {== $button 8}
     {if_else
      [from_arcade]
      {ui goto_screen main_screen 0 1}
      {ui goto_screen high_scores_menu_screen 0 1}}
     kDataUnhandled})
   (component_select
    ($component $player_num)
    {if_else
     [from_arcade]
     {do
      {synth play_sequence select.cue}
      {ui goto_screen main_screen}}
     kDataUnhandled})}
  {new
   UIPanel
   high_clear_all_panel
   (file
    "ui/generic_confirm_long.milo")
   (focus option_top.but)
   (reset_focus 1)
   (enter
    {heading.lbl
     set_localized
     {localize
      "clear_high_scores_confirm"}}
    {option_top.but
     set_localized
     {localize
      "generic_yes"}}
    {option_bottom.but
     set_localized
     {localize
      "generic_no"}}
    {$this
     set_highlight
     {$this focus_name}})
   (component_select
    ($component $player_num)
    {switch
     $component
     (option_top.but
      {game clear_progress}
      {high_scores_menu_panel set focus_check 1}
      {ui goto_screen high_scores_menu_screen})
     (option_bottom.but
      {ui goto_screen high_scores_menu_screen})})
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (option_top.but 0)
      (option_bottom.but 1)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)}
  {new
   UIScreen
   high_clear_all_screen
   (panels shell_bg_panel highlight_panel high_clear_all_panel meta)
   (focus high_clear_all_panel)
   (back high_scores_menu_screen)}
  {new
   UIPanel
   main_exit_confirm_panel
   (file
    "ui/shell_exit_confirm.milo")
   (focus option_top.but)
   (enter
    {$this set_focus option_top.but}
    {heading.lbl
     set
     text_token
     "exit_confirm_heading"}
    {description.lbl
     set
     text_token
     "exit_confirm_description"}
    {option_top.but
     set
     text_token
     "generic_yes"}
    {option_bottom.but
     set
     text_token
     "generic_no"}
    {$this
     set_highlight
     {$this focus_name}})
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (option_top.but 0)
      (option_bottom.but 1)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)
   (component_select
    ($component $player_num)
    {switch
     $component
     (option_top.but
      {game exit})
     (option_bottom.but
      {ui goto_screen main_screen})
     kDataUnhandled})
   (button_down
    ($button $player_num)
    {if_else
     {== $button 8}
     {game exit}
     kDataUnhandled})}
  {new
   UIScreen
   main_exit_confirm_screen
   (panels shell_bg_panel highlight_panel main_exit_confirm_panel meta)
   (focus main_exit_confirm_panel)}
  {new
   UIPanel
   arcade_start_level_panel
   (file
    "ui/sel_level.milo")
   (focus level.lst)
   (enter
    {level_manager_lp
     list_reset
     {game get_unlocked_level}}
    {level.lst set_provider level_manager_lp}
    {level.lst
     set_selected
     {game get_saved_diff_idx}}
    {description.lbl set_showing 0})
   (exit)
   (component_select
    ($component $player_num)
    {switch
     $component
     (level.lst
      {game
       set_saved_diff_idx
       {level.lst selected_pos}}
      {game
       set_arcade_start_level
       {level_manager_lp
        get_actual_gametype
        {level.lst selected_pos}}}
      {{game song_provider}
       arcade_reset}
      {{game song_provider}
       set_skip_levels
       1}
      {if_else
       {&&
        {game no_songs_available}
        {!
         {shell_no_songs_screen get visited_screen}}}
       {do
        {shell_no_songs_screen set from_arcade 1}
        {ui goto_screen shell_no_songs_screen}}
       {ui goto_screen arcade_song_list_screen}})})
   (button_down
    ($button $player_num)
    {if_else
     {== $button 8}
     {do
      {game arcade_reset}
      {ui goto_screen main_screen 0 1}}
     kDataUnhandled})}
  {new
   UIScreen
   arcade_start_level_screen
   (panels meta shell_bg_panel arcade_start_level_panel)
   (focus arcade_start_level_panel)}
  {new
   UIPanel
   arcade_song_list_panel
   (file
    "ui/sel_song.milo")
   (focus song.lst)
   (set_scrollbar
    ($list)
    {if_else
     {<=
      {$list total_num_items}
      {$list get display_num}}
     {scrollbar.grp set_showing 0}
     {do
      {scrollbar.grp set_showing 1}
      {scrollbar.grp
       set_frame
       {/
        {'*'
         100
         {$list first_showing}}
        {$list max_first_showing}}}}})
   (enter
    {song.lst
     set_provider
     {game song_provider}}
    {song.lst
     set_selected
     {{game song_provider}
      get_selection}
     {{game song_provider}
      get_first_showing}}
    {sel_song.lbl
     set_localized
     {{game song_provider}
      get_label}}
    {$this set_scrollbar song.lst})
   (component_scroll
    ($component $player_num)
    {$this set_scrollbar song.lst})
   (component_select
    ($component $player_num)
    {if_else
     {!=
      {{game song_provider}
       get_items}
      0}
     {do
      {if_else
       {{game song_provider}
        should_start_song}
       {do
        {{game song_provider}
         on_select
         {song.lst selected_pos}
         {song.lst first_showing}}
        {switch
         {{game song_provider}
          get_phase_state
          {song.lst selected_pos}}
         (0
          {if_else
           {{game track_provider}
            valid_arcade_song_list}
           {do
            {game arcade_start}
            {game set_song}
            {if_else
             {game is_first_session}
             {ui goto_screen force_help_01_screen}
             {do
              {choke_screen set next game_loading_screen}
              {ui goto_screen choke_screen}}}}
           {ui goto_screen shell_not_enough_songs_screen}})
         (1
          {arcade_song_unplayable_panel set song_state 1}
          {ui goto_screen arcade_song_unplayable_screen})
         (2
          {arcade_song_unplayable_panel set song_state 2}
          {ui goto_screen arcade_song_unplayable_screen})}}
       {do
        {{game song_provider}
         on_select
         {song.lst selected_pos}
         {song.lst first_showing}}
        {while
         {{game song_provider}
          next_provider}
         {song.lst
          set_provider
          {{game song_provider}
           next_provider}}}
        {song.lst
         set_selected
         {{game song_provider}
          get_selection}
         {{game song_provider}
          get_first_showing}}
        {sel_song.lbl
         set_localized
         {{game song_provider}
          get_label}}
        {$this set_scrollbar song.lst}}}}
     kDataUnhandled})
   (button_down
    ($button $player_num)
    {if_else
     {&&
      {== $button 8}
      {{game song_provider}
       can_go_back}}
     {do
      {play_sfx back.cue}
      {{game song_provider}
       on_back
       {song.lst selected_pos}
       {song.lst first_showing}}
      {while
       {{game song_provider}
        next_provider}
       {song.lst
        set_provider
        {{game song_provider}
         next_provider}}}
      {song.lst
       set_selected
       {{game song_provider}
        get_selection}
       {{game song_provider}
        get_first_showing}}
      {sel_song.lbl
       set_localized
       {{game song_provider}
        get_label}}
      {$this set_scrollbar song.lst}}
     kDataUnhandled})}
  {new
   UIScreen
   arcade_song_list_screen
   (panels meta shell_bg_panel arcade_song_list_panel)
   (focus arcade_song_list_panel)
   (back arcade_start_level_screen)}
  {new
   UIPanel
   shell_not_enough_songs_panel
   (file
    "ui/shell_not_enough_songs.milo")
   (focus ok.but)}
  {new
   UIScreen
   shell_not_enough_songs_screen
   (panels shell_bg_panel shell_not_enough_songs_panel)
   (focus shell_not_enough_songs_panel)
   (back arcade_song_list_screen)
   (component_select
    ($component $player_num)
    {ui goto_screen arcade_song_list_screen})}
  {new
   UIPanel
   arcade_song_unplayable_panel
   (file
    "ui/shell_dialog.milo")
   (focus ok.but)
   (song_state 0)
   (enter
    {switch
     [song_state]
     (1
      {heading.lbl set text_token song_provider_missing}
      {description.lbl set text_token song_provider_missing_desc})
     (2
      {heading.lbl set text_token song_provider_unplayable}
      {description.lbl set text_token song_provider_unplayable_desc})
     (0
      {heading.lbl
       set_localized
       "error"}
      {description.lbl
       set_localized
       "Song is not unplayable."})})
   (button_down
    ($button $player_num)
    {if_else
     {'||'
      {== $button 8}
      {== $button 11}}
     {ui goto_screen arcade_song_list_screen 0 1}
     kDataUnhandled})}
  {new
   UIScreen
   arcade_song_unplayable_screen
   (panels meta shell_bg_panel arcade_song_unplayable_panel)
   (focus arcade_song_unplayable_panel)}
  {new
   UIPanel
   arcade_lose_panel
   (file
    "ui/arcade_lose.milo")
   (enter
    {hud_panel show_see_thru_hostile 0}
    {$this set_focus replay_marathon.but}
    {arcade_score.lbl
     set_localized
     {sprintf
      {localize arcade_lose_total}
      {localize_separated_int
       {game arcade_get_total_score}}}}
    {$this
     set_highlight
     {$this focus_name}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (replay_marathon.but 0)
      (next_marathon.but 1)
      (exit.but 2)}})}
  {new
   UIScreen
   arcade_lose_screen
   (panels end_bg_panel highlight_panel arcade_lose_panel)
   (focus arcade_lose_panel)
   (enter
    {game_screen set_paused 1})
   (next_marathon
    {game arcade_start_next}
    {game set_song}
    {choke_screen set next game_loading_screen}
    {ui pop_screen choke_screen})
   (replay_marathon
    {game arcade_start_replay}
    {game set_song}
    {choke_screen set next game_loading_screen}
    {ui pop_screen choke_screen})
   (choose_exit
    {game arcade_reset}
    {if_else
     {game earned_new_unlock_level}
     {do
      {choke_screen set next arcade_new_levels_screen}
      {ui pop_screen choke_screen}}
     {if_else
      {>
       {game get_new_top_marathon}
       0}
      {do
       {high_marathons_screen set from_arcade 1}
       {choke_screen set next high_marathons_screen}
       {ui pop_screen choke_screen}}
      {do
       {choke_screen set next main_screen}
       {ui pop_screen choke_screen}}}})
   (component_select
    ($component $player_num)
    {switch
     $component
     (replay_marathon.but
      {$this replay_marathon})
     (next_marathon.but
      {$this next_marathon})
     (exit.but
      {$this choose_exit})})
   (button_down
    ($button $player_num)
    {switch
     $button
     (7
      {$this replay_marathon})
     (5
      {$this next_marathon})
     (8
      {$this choose_exit})
     kDataUnhandled})}
  {new
   UIPanel
   shell_arcade_lose_panel
   (file
    "ui/shell_arcade_lose.milo")
   (continues 0)
   (enter
    {$this set_focus replay_marathon.but}
    {arcade_score.lbl
     set_localized
     {sprintf
      {localize arcade_lose_total}
      {localize_separated_int
       {game arcade_get_total_score}}}})}
  {new
   UIScreen
   shell_arcade_lose_screen
   (panels shell_bg_panel highlight_panel shell_arcade_lose_panel)
   (focus shell_arcade_lose_panel)
   (enter)
   (next_marathon
    {game arcade_start_next}
    {game set_song}
    {choke_screen set next game_loading_screen}
    {ui goto_screen choke_screen})
   (replay_marathon
    {game arcade_start_replay}
    {game set_song}
    {choke_screen set next game_loading_screen}
    {ui goto_screen choke_screen})
   (choose_exit
    {game arcade_reset}
    {if_else
     {game earned_new_unlock_level}
     {ui goto_screen arcade_new_levels_screen}
     {if_else
      {>
       {game get_new_top_marathon}
       0}
      {do
       {high_marathons_screen set from_arcade 1}
       {ui goto_screen high_marathons_screen}}
      {ui goto_screen main_screen}}})
   (component_select
    ($component $player_num)
    {switch
     $component
     (replay_marathon.but
      {$this replay_marathon})
     (next_marathon.but
      {$this next_marathon})
     (exit.but
      {$this choose_exit})})
   (button_down
    ($button $player_num)
    {switch
     $button
     (7
      {$this replay_marathon})
     (5
      {$this next_marathon})
     (8
      {$this choose_exit})
     kDataUnhandled})}
  {new
   UIPanel
   arcade_new_levels_panel
   (file
    "ui/end_arcade_new_levels.milo")
   (focus ok.but)
   (anims_done 0)
   (enter
    {anim_all.grp set_frame 0}
    {anim_all.grp
     animate
     (units 2)})}
  {new
   UIScreen
   arcade_new_levels_screen
   (panels shell_bg_panel arcade_new_levels_panel)
   (focus arcade_new_levels_panel)
   (leaving_screen 0)
   (enter
    {set
     [leaving_screen]
     0})
   (arcade_new_levels_continue
    {if
     {==
      [leaving_screen]
      0}
     {set
      [leaving_screen]
      1}
     {if_else
      {>
       {game get_new_top_marathon}
       0}
      {do
       {high_marathons_screen set from_arcade 1}
       {ui goto_screen high_marathons_screen}}
      {ui goto_screen main_screen}}})
   (component_select
    ($component $player_num)
    {$this arcade_new_levels_continue})}
  {new
   UIPanel
   arcade_post_win_panel
   (file
    "ui/arcade_win.milo")
   (focus ok.but)
   (allow_exit 0)
   (enter
    {$this set_focus next_marathon.but}
    {buttons.grp set_showing 1}
    {score.lbl
     set_localized
     {sprintf
      {localize arcade_lose_total}
      {localize_separated_int
       {game arcade_get_total_score}}}}
    {callout.tnm
     animate
     (units 2)}
    {$this
     set_highlight
     {$this focus_name}})
   (next_marathon
    {game arcade_start_next}
    {game set_song}
    {choke_screen set next game_loading_screen}
    {ui pop_screen choke_screen})
   (replay_marathon
    {game arcade_start_replay}
    {game set_song}
    {choke_screen set next game_loading_screen}
    {ui pop_screen choke_screen})
   (component_select
    ($component $player_num)
    {switch
     $component
     (next_marathon.but
      {$this next_marathon})
     (replay_marathon.but
      {$this replay_marathon})
     (exit.but
      {game arcade_reset}
      {if_else
       {game earned_new_unlock_level}
       {do
        {choke_screen set next arcade_new_levels_screen}
        {ui pop_screen choke_screen}}
       {if_else
        {>
         {game get_new_top_marathon}
         0}
        {do
         {high_marathons_screen set from_arcade 1}
         {choke_screen set next high_marathons_screen}
         {ui pop_screen choke_screen}}
        {do
         {choke_screen set next main_screen}
         {ui pop_screen choke_screen}}}})})
   (button_down
    ($button $player_num)
    {switch
     $button
     (7
      {$this replay_marathon})
     (5
      {$this next_marathon})
     kDataUnhandled})
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (next_marathon.but 0)
      (replay_marathon.but 1)
      (exit.but 2)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)}
  {new
   UIScreen
   arcade_post_win_screen
   (panels end_bg_panel highlight_panel arcade_post_win_panel)
   (focus arcade_post_win_panel)}
  {new
   UIPanel
   help_overlay_panel
   (file
    "ui/help_overlay.milo")
   (focus UIButton.but)
   (update_overlay
    ($prev $next $page)
    {help_navigate_up.mesh set_showing $prev}
    {help_navigate_down.mesh set_showing $next}
    {page.lbl
     set_localized
     {sprintf
      "%d/%d"
      $page
      9}}
    {switch
     $page
     (7
      {help_navigate_parts.grp set_frame 1})
     (10
      {help_navigate_parts.grp set_frame 2})
     {help_navigate_parts.grp set_frame 0}})}
  {new
   UIPanel
   help_bg_panel
   (file
    "ui/help_bg.milo")}
  {new
   UIPanel
   help_panel_01
   (file
    "ui/help_screens_01.milo")
   (forward 1)
   (focus UIButton.but)
   (enter)
   (exit)
   (help_done
    {ui goto_screen main_screen})
   (test_entering)
   (component_select
    ($component $player_num)
    {set $forward 1}
    {$this test_entering}
    {$this select_next_help})
   (button_down
    ($button $player_num)
    {switch
     $button
     (14
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (5
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (12
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (7
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (8
      {$this test_entering}
      {$this help_done})
     kDataUnhandled})
   (select_next_help
    {$this next_help})
   (prev_help)
   (next_help
    {ui goto_screen help_screen_02})}
  {new
   UIPanel
   help_panel_02
   (file
    "ui/help_screens_02.milo")
   (forward 1)
   (focus UIButton.but)
   (enter)
   (exit)
   (help_done
    {ui goto_screen main_screen})
   (test_entering)
   (component_select
    ($component $player_num)
    {set $forward 1}
    {$this test_entering}
    {$this select_next_help})
   (button_down
    ($button $player_num)
    {switch
     $button
     (14
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (5
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (12
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (7
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (8
      {$this test_entering}
      {$this help_done})
     kDataUnhandled})
   (select_next_help
    {$this next_help})
   (prev_help
    {ui goto_screen help_screen_01})
   (next_help
    {ui goto_screen help_screen_02a})}
  {new
   UIPanel
   help_panel_02a
   (file
    "ui/help_screens_02a.milo")
   (forward 1)
   (focus UIButton.but)
   (enter)
   (exit)
   (help_done
    {ui goto_screen main_screen})
   (test_entering)
   (component_select
    ($component $player_num)
    {set $forward 1}
    {$this test_entering}
    {$this select_next_help})
   (button_down
    ($button $player_num)
    {switch
     $button
     (14
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (5
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (12
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (7
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (8
      {$this test_entering}
      {$this help_done})
     kDataUnhandled})
   (select_next_help
    {$this next_help})
   (prev_help
    {ui goto_screen help_screen_02})
   (next_help
    {ui goto_screen help_screen_03})}
  {new
   UIPanel
   help_panel_03
   (file
    "ui/help_screens_03.milo")
   (forward 1)
   (focus UIButton.but)
   (enter)
   (exit)
   (help_done
    {ui goto_screen main_screen})
   (test_entering)
   (component_select
    ($component $player_num)
    {set $forward 1}
    {$this test_entering}
    {$this select_next_help})
   (button_down
    ($button $player_num)
    {switch
     $button
     (14
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (5
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (12
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (7
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (8
      {$this test_entering}
      {$this help_done})
     kDataUnhandled})
   (select_next_help
    {$this next_help})
   (prev_help
    {ui goto_screen help_screen_02})
   (next_help
    {ui goto_screen help_screen_04})}
  {new
   UIPanel
   help_panel_04
   (file
    "ui/help_screens_04.milo")
   (forward 1)
   (focus UIButton.but)
   (enter)
   (exit)
   (help_done
    {ui goto_screen main_screen})
   (test_entering)
   (component_select
    ($component $player_num)
    {set $forward 1}
    {$this test_entering}
    {$this select_next_help})
   (button_down
    ($button $player_num)
    {switch
     $button
     (14
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (5
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (12
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (7
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (8
      {$this test_entering}
      {$this help_done})
     kDataUnhandled})
   (select_next_help
    {$this next_help})
   (prev_help
    {ui goto_screen help_screen_03})
   (next_help
    {ui goto_screen help_screen_05})}
  {new
   UIPanel
   help_panel_05
   (file
    "ui/help_screens_05.milo")
   (forward 1)
   (focus UIButton.but)
   (enter)
   (exit)
   (help_done
    {ui goto_screen main_screen})
   (test_entering)
   (component_select
    ($component $player_num)
    {set $forward 1}
    {$this test_entering}
    {$this select_next_help})
   (button_down
    ($button $player_num)
    {switch
     $button
     (14
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (5
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (12
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (7
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (8
      {$this test_entering}
      {$this help_done})
     kDataUnhandled})
   (select_next_help
    {$this next_help})
   (prev_help
    {ui goto_screen help_screen_04})
   (next_help
    {ui goto_screen help_screen_06})}
  {new
   UIPanel
   help_panel_06
   (file
    "ui/help_screens_06.milo")
   (forward 1)
   (focus UIButton.but)
   (enter)
   (exit)
   (help_done
    {ui goto_screen main_screen})
   (test_entering)
   (component_select
    ($component $player_num)
    {set $forward 1}
    {$this test_entering}
    {$this select_next_help})
   (button_down
    ($button $player_num)
    {switch
     $button
     (14
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (5
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (12
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (7
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (8
      {$this test_entering}
      {$this help_done})
     kDataUnhandled})
   (select_next_help
    {$this next_help})
   (prev_help
    {ui goto_screen help_screen_05})
   (next_help
    {ui goto_screen help_screen_07})}
  {new
   UIPanel
   help_panel_07
   (file
    "ui/help_screens_07.milo")
   (forward 1)
   (focus UIButton.but)
   (enter)
   (exit)
   (help_done
    {ui goto_screen main_screen})
   (test_entering)
   (component_select
    ($component $player_num)
    {set $forward 1}
    {$this test_entering}
    {$this select_next_help})
   (button_down
    ($button $player_num)
    {switch
     $button
     (14
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (5
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (12
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (7
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (8
      {$this test_entering}
      {$this help_done})
     kDataUnhandled})
   (select_next_help
    {$this next_help})
   (prev_help
    {ui goto_screen help_screen_06})
   (next_help
    {ui goto_screen help_screen_08})}
  {new
   UIPanel
   help_panel_08
   (file
    "ui/help_screens_08.milo")
   (forward 1)
   (focus UIButton.but)
   (enter)
   (exit)
   (help_done
    {ui goto_screen main_screen})
   (test_entering)
   (component_select
    ($component $player_num)
    {set $forward 1}
    {$this test_entering}
    {$this select_next_help})
   (button_down
    ($button $player_num)
    {switch
     $button
     (14
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (5
      {$this test_entering}
      {set $forward 1}
      {$this next_help})
     (12
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (7
      {$this test_entering}
      {set $forward 0}
      {$this prev_help})
     (8
      {$this test_entering}
      {$this help_done})
     kDataUnhandled})
   (select_next_help
    {$this help_done})
   (prev_help
    {ui goto_screen help_screen_07})
   (next_help)}
  {new
   UIScreen
   help_screen_01
   (panels help_bg_panel help_panel_01 help_overlay_panel)
   (focus help_panel_01)
   (enter
    {help_overlay_panel update_overlay 0 1 1})
   (exit_frames 0)
   (enter_frames 0)}
  {new
   UIScreen
   help_screen_02
   (panels help_bg_panel help_panel_02 help_overlay_panel)
   (focus help_panel_02)
   (enter
    {help_overlay_panel update_overlay 1 1 2})
   (exit_frames 0)
   (enter_frames 0)}
  {new
   UIScreen
   help_screen_02a
   (panels help_bg_panel help_panel_02a help_overlay_panel)
   (focus help_panel_02a)
   (enter
    {help_overlay_panel update_overlay 1 1 3})
   (exit_frames 0)
   (enter_frames 0)}
  {new
   UIScreen
   help_screen_03
   (panels help_bg_panel help_panel_03 help_overlay_panel)
   (focus help_panel_03)
   (enter
    {help_overlay_panel update_overlay 1 1 4})
   (exit_frames 0)
   (enter_frames 0)}
  {new
   UIScreen
   help_screen_04
   (panels help_bg_panel help_panel_04 help_overlay_panel)
   (focus help_panel_04)
   (enter
    {help_overlay_panel update_overlay 1 1 5})
   (exit_frames 0)
   (enter_frames 0)}
  {new
   UIScreen
   help_screen_05
   (panels help_bg_panel help_panel_05 help_overlay_panel)
   (focus help_panel_05)
   (enter
    {help_overlay_panel update_overlay 1 1 6})
   (exit_frames 0)
   (enter_frames 0)}
  {new
   UIScreen
   help_screen_06
   (panels help_bg_panel help_panel_06 help_overlay_panel)
   (focus help_panel_06)
   (enter
    {help_overlay_panel update_overlay 1 1 7})
   (exit_frames 0)
   (enter_frames 0)}
  {new
   UIScreen
   help_screen_07
   (panels help_bg_panel help_panel_07 help_overlay_panel)
   (focus help_panel_07)
   (enter
    {help_overlay_panel update_overlay 1 1 8})
   (exit_frames 0)
   (enter_frames 0)}
  {new
   UIScreen
   help_screen_08
   (panels help_bg_panel help_panel_08 help_overlay_panel)
   (focus help_panel_08)
   (enter
    {help_overlay_panel update_overlay 1 0 9})
   (exit_frames 0)
   (enter_frames 0)}
  {new
   UIPanel
   force_help_01_panel
   (file
    "ui/help_screens_03.milo")
   (focus
    "UIButton.but")}
  {new
   UIScreen
   force_help_01_screen
   (panels help_bg_panel force_help_01_panel)
   (focus force_help_01_panel)
   (do_next
    {ui goto_screen force_help_02_screen})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {game arcade_reset}
      {ui goto_screen main_screen 0 1})
     (5
      {$this do_next})}
    kDataUnhandled)
   (component_select
    ($component $player_num)
    {$this do_next})}
  {new
   UIPanel
   force_help_02_panel
   (file
    "ui/help_screens_04.milo")
   (focus
    "UIButton.but")}
  {new
   UIScreen
   force_help_02_screen
   (panels help_bg_panel force_help_02_panel)
   (focus force_help_02_panel)
   (do_next
    {ui goto_screen force_help_03_screen})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {game arcade_reset}
      {ui goto_screen main_screen 0 1})
     (5
      {$this do_next})}
    kDataUnhandled)
   (component_select
    ($component $player_num)
    {$this do_next})}
  {new
   UIPanel
   force_help_03_panel
   (file
    "ui/help_screens_06.milo")
   (focus
    "UIButton.but")}
  {new
   UIScreen
   force_help_03_screen
   (panels help_bg_panel force_help_03_panel)
   (focus force_help_03_panel)
   (do_next
    {ui goto_screen force_help_04_screen})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {game arcade_reset}
      {ui goto_screen main_screen 0 1})
     (5
      {$this do_next})}
    kDataUnhandled)
   (component_select
    ($component $player_num)
    {$this do_next})}
  {new
   UIPanel
   force_help_04_panel
   (file
    "ui/help_screens_07.milo")
   (focus
    "UIButton.but")}
  {new
   UIScreen
   force_help_04_screen
   (panels help_bg_panel force_help_04_panel)
   (focus force_help_04_panel)
   (do_next
    {ui goto_screen force_help_last_screen})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {game arcade_reset}
      {ui goto_screen main_screen 0 1})
     (5
      {$this do_next})}
    kDataUnhandled)
   (component_select
    ($component $player_num)
    {$this do_next})}
  {new
   UIPanel
   force_help_last_panel
   (file
    "ui/help_screens_08.milo")
   (focus
    "UIButton.but")}
  {new
   UIScreen
   force_help_last_screen
   (panels help_bg_panel force_help_last_panel)
   (focus force_help_last_panel)
   (do_next
    {game clear_first_session}
    {choke_screen set next game_loading_screen}
    {ui goto_screen choke_screen})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {game arcade_reset}
      {ui goto_screen main_screen 0 1})
     (5
      {$this do_next})}
    kDataUnhandled)
   (component_select
    ($component $player_num)
    {$this do_next})}
  {new
   UIPanel
   options_panel
   (file
    "ui/options.milo")
   (focus
    "sfx_volume.but")
   (enter
    {$this update_shuffle_text}
    {if_else
     {game is_m1a}
     {manage_users.but
      set
      text_token
      "manage_users"}
     {manage_users.but
      set
      text_token
      "edit_name"}}
    {$this
     set_highlight
     {$this focus_name}})
   (update_shuffle_text
    {shuffle.but
     set_localized
     {sprintf
      {localize
       "shuffle_fmt"}
      {if_else
       {game is_shuffle_on}
       {localize
        "nyi_options_menu_music_on"}
       {localize
        "nyi_options_menu_music_off"}}}})
   (toggle_shuffle
    {game
     set_shuffle
     {!
      {game is_shuffle_on}}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (sfx_volume.but 0)
      (brightness.but 1)
      (manage_users.but 2)
      (shuffle.but 3)
      (visualizer.but 4)
      (about.but 5)}})
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)}
  {new
   UIPanel
   pause_options_panel
   (file
    "ui/pause_options.milo")
   (focus
    "sfx_volume.but")
   (enter
    {$this
     set_highlight
     {$this focus_name}})
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (sfx_volume.but 0)
      (brightness.but 1)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)}
  {new
   UIScreen
   main_options_screen
   (panels meta shell_bg_panel highlight_panel options_panel)
   (focus options_panel)
   (back main_screen)
   (component_select
    ($component $player_num)
    {switch
     $component
     (sfx_volume.but
      {ui goto_screen main_sfx_volume_screen})
     (brightness.but
      {ui goto_screen main_brightness_screen})
     (visualizer.but
      {ui goto_screen options_visualizer_screen})
     (shuffle.but
      {options_panel toggle_shuffle}
      {options_panel update_shuffle_text})
     (manage_users.but
      {if_else
       {game is_m1a}
       {do
        {manage_users_panel set from_options 1}
        {ui goto_screen manage_users_screen}}
       {do
        {name_panel set back main_options_screen}
        {name_panel set creating_user 0}
        {ui goto_screen name_screen}}})
     (about.but
      {ui goto_screen options_about_screen})})}
  {new
   UIScreen
   pause_options_screen
   (panels end_bg_panel highlight_panel pause_options_panel)
   (focus pause_options_panel)
   (cheat_enable
    {ui goto_screen sync_offset_screen})
   (cheat_steps 0)
   (cheat_click
    ($left $right)
    {cond
     ({&&
       {<
        [cheat_steps]
        3}
       $left}
      {'++'
       [cheat_steps]})
     ({&&
       {<
        [cheat_steps]
        3}
       $right}
      {set
       [cheat_steps]
       0})
     ({&&
       {<
        [cheat_steps]
        6}
       $right}
      {'++'
       [cheat_steps]})
     ({&&
       {<
        [cheat_steps]
        6}
       $left}
      {set
       [cheat_steps]
       0})
     ({&&
       {<
        [cheat_steps]
        8}
       $left}
      {'++'
       [cheat_steps]})
     ({&&
       {<
        [cheat_steps]
        9}
       $left}
      {do
       {'++'
        [cheat_steps]}
       {$this cheat_enable}})
     (1
      {set
       [cheat_steps]
       0})})
   (enter
    {set
     [cheat_steps]
     0})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {if_else
       {game arcade_in_progress}
       {ui goto_screen pause_arcade_screen 0 1}
       {ui goto_screen pause_screen 0 1}})
     (7
      {$this cheat_click 1 0})
     (5
      {$this cheat_click 0 1})
     kDataUnhandled})
   (component_select
    ($component $player_num)
    {switch
     $component
     (sfx_volume.but
      {ui goto_screen pause_sfx_volume_screen})
     (brightness.but
      {ui goto_screen pause_brightness_screen})})}
  {new
   UIPanel
   manage_users_panel
   (file
    "ui/manage_users.milo")
   (focus create.but)
   (current_focus 0)
   (from_options 1)
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (create.but 0)
      (select.but 1)
      (change.but 2)
      (delete.but 3)}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)
   (get_num_users
    {save_file_lp get_items})
   (enter
    {$this
     update_focus
     [from_options]}
    {set
     [from_options]
     0}
    {$this
     set_highlight
     {$this focus_name}})
   (update_focus
    ($resetting)
    {$this set_focus change.but}
    {if
     $resetting
     {set
      [current_focus]
      0}}
    {create.but set_state 0}
    {select.but set_state 0}
    {do
     ($num
      {$this get_num_users})
     {if_else
      {== $num 1}
      {do
       {if
        {==
         [current_focus]
         1}
        {set
         [current_focus]
         2}}
       {select.but set_state 2}}
      {if
       {== $num 5}
       {do
        {if
         {==
          [current_focus]
          0}
         {set
          [current_focus]
          1}}
        {create.but set_state 2}}}}}
    {switch
     [current_focus]
     (0
      {$this set_focus create.but})
     (1
      {$this set_focus select.but})
     (2
      {$this set_focus change.but})
     (3
      {$this set_focus delete.but})})
   (component_select
    ($component $player_num)
    {switch
     $component
     (create.but
      {if_else
       {<
        {$this get_num_users}
        5}
       {do
        {set
         [current_focus]
         0}
        {name_panel set back manage_users_screen}
        {name_panel set creating_user 1}
        {ui goto_screen name_screen}}
       kDataUnhandled})
     (select.but
      {set
       [current_focus]
       1}
      {select_user_panel set next manage_users_screen}
      {ui goto_screen select_user_screen})
     (change.but
      {set
       [current_focus]
       2}
      {name_panel set back manage_users_screen}
      {name_panel set creating_user 0}
      {select_user_panel set next name_screen}
      {ui goto_screen select_user_screen})
     (delete.but
      {do
       {set
        [current_focus]
        3}
       {select_user_panel set next delete_user_screen}
       {ui goto_screen select_user_screen}})
     kDataUnhandled})}
  {new
   UIScreen
   manage_users_screen
   (panels meta shell_bg_panel highlight_panel manage_users_panel)
   (focus manage_users_panel)
   (back main_options_screen)}
  {new
   UIPanel
   select_user_panel
   (file
    "ui/manage_users_list.milo")
   (next manage_users_screen)
   (focus users.lst)
   (reset_focus 1)
   {selected_idx 0}
   (enter
    {users.lst set_provider save_file_lp}
    {users.lst
     set_selected
     {game get_curr_user_idx}})
   (component_select
    ($component $player_num)
    {$this process_selection}
    {ui
     goto_screen
     [next]})
   (process_selection
    {set
     [selected_idx]
     {users.lst selected_pos}}
    {game
     select_user
     {users.lst selected_pos}})
   (exiting
    {!
     {game save_file_is_loaded}})
   (button_down
    ($button $player_num)
    {if_else
     {== $button 8}
     {if_else
      {==
       [next]
       main_screen}
      {$this process_selection}
      {ui goto_screen manage_users_screen 0 1}}
     kDataUnhandled})}
  {new
   UIScreen
   select_user_screen
   (panels meta shell_bg_panel select_user_panel)
   (focus select_user_panel)}
  {new
   UIScreen
   select_user_screen_initial
   (panels meta shell_bg_panel select_user_panel)
   (focus select_user_panel)
   (enter
    {select_user_panel set next main_screen})}
  {new
   UIPanel
   delete_user_panel
   (file
    "ui/manage_users_delete.milo")
   (focus option_top.but)
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (option_top.but 0)
      (option_bottom.but 1)}})
   (enter
    {$this
     set_highlight
     {$this focus_name}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)
   (component_select
    ($component $player_num)
    {switch
     $component
     (option_top.but
      {$this process_delete})
     (option_bottom.but
      {ui goto_screen manage_users_screen})
     kDataUnhandled})
   (process_delete
    {game
     delete_user
     {select_user_panel get selected_idx}}
    {if_else
     {==
      {save_file_lp get_items}
      0}
     {do
      {name_panel set back manage_users_screen}
      {name_panel set creating_user 1}
      {ui goto_screen name_screen}}
     {ui goto_screen manage_users_screen}})
   (button_down
    ($button $player_num)
    {if_else
     {== $button 8}
     {ui goto_screen manage_users_screen 0 1}
     kDataUnhandled})}
  {new
   UIScreen
   delete_user_screen
   (panels meta shell_bg_panel highlight_panel delete_user_panel)
   (focus delete_user_panel)}
  {new
   UIPanel
   choose_first_user_panel
   (file
    "ui/manage_users_start.milo")
   (focus select.but)
   (reset_focus 1)
   (set_highlight
    ($focus)
    {highlight_panel
     move_pill
     $this
     {switch
      $focus
      (select.but 0)
      (create.but 1)}})
   (enter
    {$this
     set_highlight
     {$this focus_name}})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {$this set_highlight $new_focus}
    kDataUnhandled)
   (component_select_start
    ($component $button $player_num)
    {highlight_panel select_pill 1}
    kDataUnhandled)
   (component_select
    ($component $player_num)
    {switch
     $component
     (select.but
      {$this select_user})
     (create.but
      {$this create_user})
     kDataUnhandled})
   (create_user
    {name_panel set creating_user 1}
    {ui goto_screen name_screen_initial})
   (select_user
    {ui goto_screen select_user_screen_initial})
   (button_down
    ($button $player_num)
    {if_else
     {== $button 8}
     {$this create_user}
     kDataUnhandled})}
  {new
   UIScreen
   choose_first_user_screen
   (panels meta shell_bg_panel highlight_panel choose_first_user_panel)
   (focus choose_first_user_panel)}
  {new
   UIPanel
   shell_heading_panel
   (file
    "ui/shell_heading.milo")
   (enter
    {$this set_focus hide_focus.lbl})
   (set_heading
    ($token)
    {heading.lbl set text_token $token})}
  {new
   UIPanel
   pause_heading_panel
   (file
    "ui/pause_heading.milo")
   (enter
    {$this set_focus hide_focus.lbl})
   (set_heading
    ($token)
    {heading.lbl set text_token $token})}
  {new
   UIPanel
   global_volume_panel
   (file
    "ui/shared_slider.milo")
   (focus
    "slider_volume.sld")
   (poll_delay 0)
   (volume_increments 0)
   (volume_half_increment 0)
   (enter
    {slider_volume.sld set_num_steps 33}
    {set
     [volume_increment]
     {/
      65536
      {- 33 1}}}
    {set
     [volume_half_increment]
     {max
      {/
       [volume_increment]
       2}
      1}}
    {slider_volume.sld set_showing 1}
    {slider_brightness.sld set_showing 0}
    {$this poll_volume})
   (poll_volume
    {slider_volume.sld
     set_current
     {min
      {int
       {/
        {'+'
         {synth master_vol}
         [volume_half_increment]}
        [volume_increment]}}
      {- 33 1}}}
    {set
     [poll_delay]
     10})
   (poll
    {--
     [poll_delay]}
    {if
     {<=
      [poll_delay]
      0}
     {$this poll_volume}})
   (component_scroll
    {set
     [poll_delay]
     10}
    {play_sfx gem_hit.cue}
    {printf
     "Slider position is %d\n"
     {slider_volume.sld current}}
    {synth
     set_master_vol
     {if_else
      {==
       0
       {slider_volume.sld current}}
      0
      {min
       {'+'
        [volume_half_increment]
        {'*'
         {slider_volume.sld current}
         [volume_increment]}}
       65535}}})}
  {new
   UIScreen
   main_global_volume_screen
   (panels meta shell_bg_panel shell_heading_panel global_volume_panel)
   (focus global_volume_panel)
   (back main_screen)
   (enter
    {shell_heading_panel
     set_heading
     "nyi_options_volume"})}
  {new
   UIScreen
   pause_global_volume_screen
   (panels end_bg_panel pause_heading_panel global_volume_panel)
   (focus global_volume_panel)
   (enter
    {pause_heading_panel
     set_heading
     "nyi_options_volume"})
   (button_down
    ($button $player_num)
    {switch
     $button
     (8
      {if_else
       {game arcade_in_progress}
       {ui goto_screen pause_arcade_screen 0 1}
       {ui goto_screen pause_screen 0 1}})
     kDataUnhandled})}
  {new
   UIPanel
   sfx_volume_panel
   (file
    "ui/shared_slider.milo")
   (focus
    "slider_volume.sld")
   (enter
    {slider_volume.sld set_num_steps 21}
    {slider_volume.sld set_showing 1}
    {slider_brightness.sld set_showing 0}
    {slider_volume.sld
     set_current
     {int
      {synth sfx_vol}}})
   (exit
    {synth save_sfx_vol})
   (component_scroll
    {play_sfx gem_hit.cue}
    {synth
     set_sfx_vol
     {slider_volume.sld current}})}
  {new
   UIScreen
   main_sfx_volume_screen
   (panels meta shell_bg_panel shell_heading_panel sfx_volume_panel)
   (focus sfx_volume_panel)
   (back main_options_screen)
   (enter
    {shell_heading_panel
     set_heading
     "nyi_options_sfx_volume"})}
  {new
   UIScreen
   pause_sfx_volume_screen
   (panels end_bg_panel pause_heading_panel sfx_volume_panel)
   (focus sfx_volume_panel)
   (enter
    {pause_heading_panel
     set_heading
     "nyi_options_sfx_volume"})
   (back pause_options_screen)}
  {new
   UIPanel
   brightness_panel
   (file
    "ui/shared_slider.milo")
   (focus
    "slider_brightness.sld")
   (enter
    {slider_brightness.sld set_num_steps 21}
    {slider_brightness.sld set_showing 1}
    {slider_volume.sld set_showing 0}
    {slider_brightness.sld
     set_current
     {/
      {rnd get_backlight}
      5}})
   (component_scroll
    {play_sfx gem_hit.cue}
    {rnd
     set_backlight
     {'*'
      {slider_brightness.sld current}
      5}})}
  {new
   UIScreen
   main_brightness_screen
   (panels meta shell_bg_panel shell_heading_panel brightness_panel)
   (focus brightness_panel)
   (back main_options_screen)
   (enter
    {shell_heading_panel
     set_heading
     "nyi_options_brightness"})}
  {new
   UIScreen
   pause_brightness_screen
   (panels end_bg_panel pause_heading_panel brightness_panel)
   (focus brightness_panel)
   (enter
    {pause_heading_panel
     set_heading
     "nyi_options_brightness"})
   (back pause_options_screen)}
  {new
   UIPanel
   sync_offset_panel
   (file
    "ui/ipod_sync.milo")
   (focus
    "codec.lst")
   (restart_song 0)
   (enter
    {codec.lst set_provider audio_sync_offset_lp}
    {codec.lst
     set_selected
     {game set_codec_sync_list_start_pos}}
    {beatmatch.lst set_provider beatmatch_sync_offset_lp}
    {beatmatch.lst
     set_selected
     {game set_beatmatch_sync_list_start_pos}}
    {codec_name.lbl
     set_localized
     {game get_codec_name}}
    {exit.but
     set_localized
     "Exit"}
    {$this set_focus codec.lst})
   (force_song_restart
    {exit.but
     set_localized
     "Exit & RESTART SONG"}
    {set
     [restart_song]
     1})
   (component_scroll_select
    ($component $selected $player_num)
    {switch
     $component
     (codec.lst
      {if_else
       {codec.lst is_scroll_selected}
       kDataUnhandled
       {do
        {game
         override_codec_sync_offset
         {codec.lst selected_pos}}
        {$this force_song_restart}}})
     (beatmatch.lst
      {if_else
       {beatmatch.lst is_scroll_selected}
       kDataUnhandled
       {do
        {game
         override_beatmatch_sync_offset
         {beatmatch.lst selected_pos}}
        {$this force_song_restart}}})
     kDataUnhandled})
   (component_select
    ($component $player_num)
    {switch
     $component
     (exit.but
      {if_else
       [restart_song]
       {do
        {choke_screen set next game_loading_screen}
        {ui pop_screen choke_screen}}
       {ui goto_screen pause_options_screen}})
     kDataUnhandled})
   (component_focus
    ($new_focus $old_focus $panel_dir)
    {switch
     $new_focus
     (codec.lst
      {codec.lbl set_state 1}
      {beatmatch.lbl set_state 0})
     (beatmatch.lst
      {codec.lbl set_state 0}
      {beatmatch.lbl set_state 1})
     (exit.but
      {codec.lbl set_state 0}
      {beatmatch.lbl set_state 0})})}
  {new
   UIScreen
   sync_offset_screen
   (panels end_bg_panel sync_offset_panel)
   (focus sync_offset_panel)}
  {new
   UIPanel
   options_visualizer_panel
   (file
    "ui/sel_visualizer.milo")
   (focus viz.lst)
   (enter
    {viz.lst set_provider visualizer_lp}
    {viz.lst
     set_selected
     {game get_selected_viz}})
   (component_select
    ($component $player_num)
    {switch
     $component
     (viz.lst
      {game
       override_visualizer
       {viz.lst selected_pos}}
      {ui goto_screen main_options_screen})
     kDataUnhandled})}
  {new
   UIScreen
   options_visualizer_screen
   (panels meta shell_bg_panel options_visualizer_panel)
   (focus options_visualizer_panel)
   (back main_options_screen)}
  {new
   UIPanel
   options_about_panel
   (file
    "ui/about_screen.milo")
   (focus UIButton.but)
   (enter)
   (component_select
    ($component $player_num)
    {ui goto_screen main_options_screen})}
  {new
   UIScreen
   options_about_screen
   (panels meta shell_bg_panel options_about_panel)
   (focus options_about_panel)
   (back main_options_screen)}
  {if
   {name_entry_required}
   {ui set first_screen name_screen_initial}}
  {ui my_init}
  {ui
   goto_screen
   {ui get first_screen}})
 (my_init)
 (first_screen main_screen)
 (component_select_start
  ($component $button $player_num)
  {do
   ($screen
    {ui current_screen})
   {if
    {&&
     {!= $screen high_marathons_screen}
     {!= $screen high_top_songs_screen}}
    {play_sfx select.cue}}
   kDataUnhandled})
 (component_focus
  ($new_focus $old_focus $panel_dir)
  {if
   {!
    {ui in_transition}}
   {play_sfx dpad.cue}}
  kDataUnhandled)
 (component_scroll
  ($component $player_num)
  {play_sfx dpad.cue}
  kDataUnhandled)
 (screen_change
  ($new_screen $old_screen $back)
  {if
   $back
   {play_sfx back.cue}}
  kDataUnhandled)
 (z_range 0.0 9.183e-42)
 (use_joypad 1)
 (cam
  (fov 3.169793e-39)
  (y -768)
  (near 1)
  (far 1000)
  (z-range 0 1))
 (env
  (ambient 1 1 1))
 (transition_time 4.5918e-41)
 (min_splash_time 9.1835e-41))
(synth
 (stream_readahead 2)
 (metamusic
  (volume 0.0)
  (fade_rate 6.8877e-41)
  (music songs/metagame/Phase_Shell_loop)
  (play_from_memory 0)
  (use_rnd_heap 0))
 (sfx
  (distance_scale 10))
 (build_banks 1)
 (use_null_synth 0)
 (mute 0)
 (stream_buf_size 1.10202e-40)
 (use_xma 1)
 (oggvorbis
  (throttle 9.183e-42))
 (bank_slots 5)
 (mics 1)
 (iop
  (max_sfx 100)
  (max_streams 8)
  (spu_buffers 16)
  (max_slip 300))
 (mic
  (gain 9.183e-42)
  (volume -1)
  (fx 1)
  (dma 0)
  (compressor 1 6.4285e-41))
 (fx
  (chain 0)
  (core_0
   (mode 0)
   (volume -15)
   (delay 5.51e-41)
   (feedback -19))
  (core_1
   (mode 0)
   (volume -96)
   (delay 0.0)
   (feedback -96)))
 (level_analysis 0))
(beatmatcher
 (watcher
  (type joypad)
  (ignore_durations 0)
  (slop 100)
  (intent_window 250)
  (pitch_bend_range 0))
 (parser
  (base_gem_pitch 12)
  (base_beat_pitch 60)
  (base_transient_interval_pitch 0)
  (use_bass_fills 0)))
(audio
 (audio_sync_offset_ms 0)
 (beatmatch_sync_offset_ms 15))
(ipod_cheats
 (show_cheats 1))
(game
 (slop 100)
 (star_power
  (earliest_miss_ms 150))
 (demo_menu 0)
 (arcade
  (endless_play 0)
  (bonus_pct_per_mastered_level 9.183e-42))
 (sweeps
  (visible_snap 4.5918e-41)
  (pos_params 9.1835e-41 9.1835e-41 9.1835e-41 9.18e-43)
  (pos_gfx_params 9.1835e-41 4.5918e-41 9.1835e-41 9.18e-43)
  (act_params 3.2142e-41 8.2651e-41 9.1835e-41 9.18e-43)
  (sweeps_segment_offset_y_ms 700 700 650 650 600 600 550 550 500 500 450 450 400 400 400 350 350 350 350 350)
  (sweeps_default_segment_ms 100)
  (sweeps_min_segment_pieces 6)
  (sweeps_flurry_cutoff_ms 410)
  (sweeps_bonus_multiplier 1.83671e-40)
  (sweeps_capture_range 3.6734e-41)
  (sweeps_capture_grace_range 5.51e-41)
  (grace_ms_miss 150)
  (sweeps_capture_offset_ms 0)
  (sweeps_section_base_value 1)
  (sweeps_control_arc 160)
  (sweeps_accuracy_level 50 70 90 100)
  (sweeps_slop_ahead_ms 50)
  (sweeps_slop_behind_ms 150)
  (sweeps_no_miss_ms 150)
  (sweeps_attenuation_rate 6))
 (high_scores
  (top_songs_length 25)
  (top_marathons_length 25)
  (starting_unlocked_level 10))
 (game_state
  (scoring_max_reserves 4)
  (scoring_start_reserves 3)
  (points_per_gem_hit 10)
  (star_power_points_multiplier 1.83671e-40)
  (limit_expected_bonuses 0)
  (limit_reserve_penalties 0)
  (base_bonus_per_extra_star 500)
  (base_bonus_per_reserve 500)
  (multiplier_cap 5)
  (multiplier_increment 10)
  (multiplier_values 1 2 3 4 5)
  (arcade_max_songs 5)
  (difficulty_multipliers 1 3 5 7 11)
  (checkpoint_early_subtractor 2.755e-41)
  (checkpoint_star_thresholds
   (3.6734e-41 7.3467e-41 1.46936e-40 2.75506e-40 3.90301e-40)
   (2.755e-41 6.4285e-41 1.19385e-40 2.75506e-40 3.90301e-40)
   (1.8367e-41 5.51e-41 9.1835e-41 2.75506e-40 3.90301e-40))
  (checkpoint_comments checkpoint_comment_poor checkpoint_comment_good checkpoint_comment_great)
  (checkpoint_warning_seconds 10)
  (game_type
   ((description difficulty_description_1_trad)
    (starting_level 1)
    (track 0)
    (y_per_second 8)
    (star_multipliers 2)
    (expected_stars 9.1835e-41)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_1_trad)
    (starting_level 0)
    (track 0)
    (y_per_second 8)
    (star_multipliers 2)
    (expected_stars 1.37753e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_1_trad)
    (starting_level 0)
    (track 0)
    (y_per_second 8)
    (star_multipliers 2)
    (expected_stars 1.83671e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_1_trad)
    (starting_level 0)
    (track 0)
    (y_per_second 8)
    (star_multipliers 2)
    (expected_stars 2.29589e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_1_trad)
    (starting_level 0)
    (track 0)
    (y_per_second 8)
    (star_multipliers 2)
    (expected_stars 2.75506e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_2_trad)
    (starting_level 1)
    (track 1)
    (y_per_second 8)
    (star_multipliers 1)
    (expected_stars 1.83671e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_2_trad)
    (starting_level 0)
    (track 1)
    (y_per_second 8)
    (star_multipliers 1)
    (expected_stars 2.29589e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_2_trad)
    (starting_level 0)
    (track 1)
    (y_per_second 8)
    (star_multipliers 1)
    (expected_stars 2.75506e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_2_trad)
    (starting_level 0)
    (track 1)
    (y_per_second 9)
    (star_multipliers 1)
    (expected_stars 3.21424e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_2_trad)
    (starting_level 0)
    (track 1)
    (y_per_second 9)
    (star_multipliers 1)
    (expected_stars 3.67342e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_3_trad)
    (starting_level 1)
    (track 2)
    (y_per_second 9)
    (star_multipliers 0)
    (expected_stars 2.75506e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_3_trad)
    (starting_level 0)
    (track 2)
    (y_per_second 9)
    (star_multipliers 0)
    (expected_stars 3.21424e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_3_trad)
    (starting_level 0)
    (track 2)
    (y_per_second 9)
    (star_multipliers 0)
    (expected_stars 3.67342e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_3_trad)
    (starting_level 0)
    (track 2)
    (y_per_second 9)
    (star_multipliers 0)
    (expected_stars 3.90301e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_3_trad)
    (starting_level 0)
    (track 2)
    (y_per_second 9)
    (star_multipliers 0)
    (expected_stars 4.1326e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_4_trad)
    (starting_level 1)
    (track 3)
    (y_per_second 9)
    (star_multipliers 0)
    (expected_stars 3.67342e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_4_trad)
    (starting_level 0)
    (track 3)
    (y_per_second 9)
    (star_multipliers 0)
    (expected_stars 3.90301e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_4_trad)
    (starting_level 0)
    (track 3)
    (y_per_second 9)
    (star_multipliers 0)
    (expected_stars 4.1326e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_4_trad)
    (starting_level 0)
    (track 3)
    (y_per_second 9)
    (star_multipliers 0)
    (expected_stars 4.36219e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_4_trad)
    (starting_level 0)
    (track 3)
    (y_per_second 9)
    (star_multipliers 0)
    (expected_stars 4.59177e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_insane)
    (starting_level 1)
    (track 3)
    (y_per_second 9)
    (star_multipliers 0)
    (expected_stars 4.59177e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_insane)
    (starting_level 0)
    (track 3)
    (y_per_second 9)
    (star_multipliers 0)
    (expected_stars 4.59177e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_insane)
    (starting_level 0)
    (track 3)
    (y_per_second 9)
    (star_multipliers 0)
    (expected_stars 4.59177e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_4_trad)
    (starting_level 0)
    (track 3)
    (y_per_second 9)
    (star_multipliers 0)
    (expected_stars 4.59177e-40)
    (expected_bonus_percent 9.1835e-41))
   ((description difficulty_description_insane)
    (starting_level 0)
    (track 3)
    (y_per_second 9)
    (star_multipliers 0)
    (expected_stars 4.59177e-40)
    (expected_bonus_percent 9.1835e-41)))
  (beat_rise 9.1835e-41)
  (beat_decay 8.2651e-41))
 (activator
  (squeeze doors.grp 20 1 33 34 65 66 100)
  (catch gem_catch.grp 20 0 99 100 199 200 299)
  (miss gem_miss.grp 20 0 10 10 20 20 30)
  (gem_capture_skew_scale 9.1835e-41))
 (joypad
  (slots 7 0 11 1 5 2))
 (survival_meter
  (frame_rate 4.5918e-41)
  (oscillator_rate 40)
  (oscillator_frames 1.10202e-40)
  (state_starts 1.148e-41 2.2959e-41 3.4438e-41 4.5918e-41 5.7397e-41 6.8877e-41 8.0356e-41 9.1835e-41)))
(conv
 (song_duration_min_sec 30)
 (song_duration_max_sec 1800)
 (beats_per_phrase 4)
 (phrase_max_duration 1.83671e-40)
 (gems_per_second 1.37753e-40 1.83671e-40 3.67342e-40 4.59177e-40)
 (gems_per_second_soft 1.10202e-40 1.37753e-40 2.29589e-40 2.75506e-40)
 (min_gem_time 2.9387e-41 2.5714e-41 2.0203e-41 1.653e-41)
 (min_gem_time_soft 3.6734e-41 3.0304e-41 2.4795e-41 2.1122e-41)
 (min_sweep_gap 3.6734e-41 3.2142e-41 3.2142e-41 3.2142e-41)
 (min_sweep_gap_soft 4.5918e-41 3.6734e-41 3.6734e-41 3.6734e-41)
 (min_flurry_gap 3.2142e-41 2.755e-41 1.8367e-41 1.3775e-41)
 (min_flurry_gap_soft 3.6734e-41 3.2142e-41 2.2959e-41 1.8367e-41)
 (bonus_min_gap_seconds 1.37753e-40 1.37753e-40 1.37753e-40 1.37753e-40)
 (use_band_energies 1)
 (minor_energy_multiplier 1)
 (amplify_beat_intervals 1)
 (beat_interval_threshold 7.346e-42)
 (beat_amplifiers
  (1 3.67342e-40 3.67342e-40 3.67342e-40 2.75506e-40)
  (2 1.83671e-40 1.83671e-40 1.83671e-40 1.83671e-40))
 (offbeat_amplifiers 0.0 0.0 0.0 0.0)
 (nobeat_amplifiers 9.1835e-41 9.1835e-41 9.1835e-41 9.1835e-41)
 (shift_threshold 2 2 2 2)
 (shift_flurries 0 0 0 0)
 (shift_max_interval 1.37753e-40 1.37753e-40 1.37753e-40 1.37753e-40)
 (sweep_long_min_duration 2.76424e-40 1.84589e-40 1.84589e-40 1.84589e-40)
 (sweep_long_target_duration 4 4 4 4)
 (sweep_flurry_max_duration 2.9387e-41 2.2959e-41 2.0203e-41 1.8367e-41)
 (bonus_seconds_per_dist 10 9 9 9)
 (bonus_phrase_dist 9.183e-42 9.183e-42 9.183e-42 9.183e-42)
 (bonus_skip_dist 9.183e-42 9.183e-42 9.183e-42 9.183e-42)
 (bonus_flurry_dist 3.6734e-41 3.6734e-41 3.6734e-41 3.6734e-41)
 (bonus_wild_dist 9.183e-42 9.183e-42 9.183e-42 9.183e-42)
 (sweep_starpower_min_members 2 2 3 3)
 (sweep_max_periods_sec 1.10202e-40 9.1835e-41 7.3467e-41 5.51e-41)
 (sweep_min_periods_sec 5.51e-41 4.5918e-41 3.6734e-41 2.755e-41)
 (sweep_short_target_duration 1.92854e-40 1.83671e-40 1.74487e-40 1.5612e-40)
 (sweep_short_min_duration 1.37753e-40 1.28569e-40 1.19385e-40 1.10202e-40)
 (sweep_starpower_target_duration 1.83671e-40 1.83671e-40 1.83671e-40 1.83671e-40)
 (sweep_starpower_min_duration 1.79079e-40 1.79079e-40 1.79079e-40 1.79079e-40)
 (sweep_cp_pregap_sp 2.75506e-40)
 (sweep_flurry_max_gap_gems 1 1 1 1)
 (sweep_flurry_max 3 3 4 4)
 (sweep_short_starting_exclusion_seconds 5)
 (sweep_short_starting_exclusion_percent 5)
 (sweep_short_ending_exclusion_seconds 2)
 (sweep_short_ending_exclusion_percent 5)
 (sweep_fallback_interval 9.1835e-41 9.1835e-41 9.1835e-41 9.1835e-41)
 (intro_min_duration 2.29589e-40)
 (intro_max_duration 4.59177e-40)
 (midi_octaves 0 1 2 3)
 (midi_trackname
  "PART GUITAR")
 (beat_section_margin 4.59e-42)
 (beat_sample_length 5)
 (beat_sample_offset 3)
 (beat_power_split_min_duration 8)
 (beat_power_split_combine 1)
 (beat_power_split_clip_low 9.183e-42)
 (beat_power_split_clip_high 0.0)
 (squelch_processing_messages 1)
 (ave_power_smoothing_range 4)
 (ave_power_smoothing_min_weight 9.1835e-41)
 (ave_power_smoothing_falloff_exponent 2)
 (max_power_smoothing_range 4)
 (max_power_smoothing_min_weight 0.0)
 (max_power_smoothing_falloff_exponent 2)
 (max_power_from_averages 1)
 (checkpoint_interval_seconds 3.214242e-39)
 (checkpoint_search_window_seconds 5)
 (checkpoint_clear_seconds 3.21424e-40 3.21424e-40 3.21424e-40 3.21424e-40)
 (trans_report 0)
 (beats_report 0))
(analysis
 (verbose 1)
 (human_readable 1)
 (freq_FFT_size 256)
 (freq_lower_band 80)
 (freq_upper_band 4500)
 (freq_subbands
  (80 300)
  (400 1500)
  (2000 4500))
 (freq_mask_enable 1)
 (tempo_env_thresh_db NaN)
 (tempo_fft_size 1024)
 (tempo_lower_band 70)
 (tempo_upper_band 180)
 (peak_prior_thresh 2.755e-41)
 (peak_post_thresh 3.6734e-41)
 (peak_neighborhood 3)
 (time_grid_env_thresh_db NaN)
 (time_grid_fft_size 256)
 (time_grid_num_peaks 3)
 (time_grid_lower_band 70)
 (time_grid_upper_band 620)
 (trans_env_thresh_db NaN)
 (trans_eq 1 1 1)
 (beats_env_thresh_db NaN)
 (beats_res_pole_magnitude 9.1513e-41))
(song_provider
 (soundtrack
  (num_songs 7)
  (names
   "Bang Camaro - Nightlife Commando"
   "Dealership - Dots And Dashes"
   "Freezepop - Pop Music Is Not A Crime"
   "Inter:sect - Midnight Gamma"
   "Kodomo - Spira Mirabilis"
   "Speck - The Theme Of The Awesome"
   "Universal Hall Pass - Dragonfly Remix")
  (song_files
   "a.m4a"
   "b.m4a"
   "c.m4a"
   "d.m4a"
   "e.m4a"
   "f.m4a"
   "g.m4a")
  (phz_files
   "aaa.phz"
   "bbb.phz"
   "ccc.phz"
   "ddd.phz"
   "eee.phz"
   "fff.phz"
   "ggg.phz")
  (durations_ms 240117 217962 232533 252029 247060 138176 272266)))
(cheats
 (play
  {do
   {'++' $overlay}
   {if
    {> $overlay 4}
    {set $overlay 0}}
   {switch
    $overlay
    (0
     {rnd toggle_overlay heap})
    (1
     {rnd toggle_overlay rate})
    (2
     {rnd toggle_overlay rate}
     {rnd toggle_timers})
    (3
     {rnd toggle_timers}
     {rnd toggle_overlay load})
    (4
     {rnd toggle_overlay load}
     {rnd toggle_overlay heap})}})
 (prev
  {rnd toggle_timers})
 (next
  {rnd update_graphics_vis}))
(quick_cheats
 (keyboard
  (0
   "Toggle Paused"
   {game toggle_paused})
  (h
   "Toggle HUD"
   {hud_panel
    set_showing
    {!
     {hud_panel showing}}})
  (t
   "Toggle Track"
   {game
    set_showing
    {!
     {game showing}}})
  (m
   "Toggle Mute"
   {cheat_toggle_mute_all})
  (a
   "Toggle Autoplay"
   {game toggle_autoplay})
  (f
   "Toggle Freeze Health"
   {game toggle_freeze_health})
  (u
   "Unlock All Levels"
   {game unlock_all_levels})
  (w
   "Win"
   {game win_cheat})
  (l
   "Lose"
   {game lose_cheat})
  (z
   "Heap dump"
   {if
    {exists heap_report}
    {heap_report}})
  (302
   "Toggle Console"
   {rnd show_console})
  (401
   "Show Cheats"
   {show_cheats}))
 (left
  (15
   "Heap Summary"
   {if
    {exists heap_report}
    {heap_report}})
  (13
   "Full Heap Dump"
   {if
    {exists heap_dump}
    {heap_dump}})
  (12
   "Toggle Framerate"
   {rnd toggle_overlay rate})
  (14
   "Toggle Heap"
   {rnd toggle_heap})
  (8
   "Screen Dump"
   {rnd screen_dump screendump})
  (5
   "Toggle Stats"
   {rnd toggle_overlay stats})
  (6
   "Toggle Timers"
   {rnd toggle_timers})
  (7
   "Print Symbol Table"
   {print_symbol_table})
  (4
   "Toggle Calc Fillrate (slow!)"
   {rnd
    set_calc_fill
    {!
     {rnd get_calc_fill}}})
  (11
   "Toggle Synth HUD"
   {synth toggle_hud})
  (9
   "Show Cheats"
   {show_cheats}))
 (right))
(system
 (init)
 (profiler
  (enabled 0)
  (buffer_size 8192)
  (sample_rate k4KHz))
 (language
  (supported eng fre ita deu esl jap)
  (default eng))
 (fp_exceptions 1)
 (main_dir 350 3000)
 (dir_sort Tex Mat Font Text Mesh Group Trans RndDir)
 (ng 0))
(objects
 (Object
  (types))
 (ObjectDir
  (types))
 (Anim)
 (Poll
  (types))
 (AnimFilter
  (types))
 (Cam
  (types))
 (Draw)
 (Font
  (types))
 (Group
  (types))
 (Mat
  (types))
 (MatAnim
  (types))
 (Mesh
  (types))
 (MeshAnim
  (types))
 (Movie
  (types))
 (RndDir
  (types
   (world_fx
    (editor
     (start
      script
      (script
       {$this start})
      (help
       "Start animation"))
     (stop
      script
      (script
       {$this stop})
      (help
       "Stop animation")))
    (enter
     {$this stop})
    (exit
     {$this stop})
    (start
     {$this
      animate
      (range 0 NaN)}
     {$this set_showing 1})
    (stop
     {$this stop_animation}
     {$this set_showing 0}))
   (VisComponent
    (tex_names
     (kal.tex sphere.tex bldgs.tex kw_7.tex testmovie_screen.tex kw_08.tex kw_8.tex kw_6.tex screen.tex screen01.tex spkr.tex wave_1.tex wave_2.tex)))))
 (Tex
  (types))
 (Text
  (types))
 (Trans
  (types))
 (TransAnim
  (types))
 (TransArray
  (types))
 (EventTrigger
  (types))
 (PanelDir
  (types))
 (UIComponent
  (types)
  (select_frames 10))
 (UIButton
  (resource_file
   "ui/button_game.milo")
  (types
   (score_game_font
    (resource_file
     "ui/button_game.milo")
    (texts
     (text
      "button_game_score.txt"
      (normal
       "DFGMaruG_SB_score.font")
      (disabled
       "DFGMaruG_SB_score.font")
      (focused
       "DFGMaruG_SB_score.font")
      (selecting
       "DFGMaruG_SB_score.font"))))
   (bold_menu_game_font
    (resource_file
     "ui/button_game.milo")
    (texts
     (text
      "button_game_boldmenu.txt"
      (normal
       "DFPMaruGothic_SU.font")
      (disabled
       "DFPMaruGothic_SU.font")
      (focused
       "DFPMaruGothic_SU_focused.font")
      (selecting
       "DFPMaruGothic_SU_selecting.font"))))
   (normal_menu_game_font
    (resource_file
     "ui/button_game.milo")
    (texts
     (text
      "button_mgothic_limited.txt"
      (normal
       "MaruGothic_Limited.font")
      (disabled
       "MaruGothic_Limited_disabled.font")
      (focused
       "MaruGothic_Limited_focused.font")
      (selecting
       "MaruGothic_Limited_selecting.font"))))
   (songlist_shell_font
    (resource_file
     "ui/button_shell.milo")
    (texts
     (text
      "button_shell_normal.txt"
      (normal
       "maru_gothic_normal.font")
      (disabled
       "maru_gothic_disabled.font")
      (focused
       "maru_gothic_focused.font")
      (selecting
       "maru_gothic_selecting.font"))))
   (default
    (resource_file
     "ui/button_game.milo")
    (texts
     (text
      "button_mgothic_limited.txt"
      (normal
       "MaruGothic_Limited.font")
      (disabled
       "MaruGothic_Limited_disabled.font")
      (focused
       "MaruGothic_Limited_focused.font")
      (selecting
       "MaruGothic_Limited_selecting.font"))))))
 (UILabel
  (resource_file
   "ui/label_game.milo")
  (types
   (score_game_font
    (resource_file
     "ui/label_game.milo")
    (texts
     (text
      "label_game_score.txt"
      (normal
       "DFGMaruG_SB_score.font")
      (disabled
       "DFGMaruG_SB_score.font")
      (focused
       "DFGMaruG_SB_score.font")
      (selecting
       "DFGMaruG_SB_score.font"))))
   (bold_menu_game_font
    (resource_file
     "ui/label_game.milo")
    (texts
     (text
      "bold_menu_game_font.txt"
      (normal
       "DFPMaruGothic_SU.font")
      (disabled
       "DFPMaruGothic_SU.font")
      (focused
       "DFPMaruGothic_SU_focused.font")
      (selecting
       "DFPMaruGothic_SU_selecting.font"))))
   (normal_menu_game_font
    (resource_file
     "ui/label_game.milo")
    (texts
     (text
      "normal_menu_game_font.txt"
      (normal
       "MaruGothic_Limited.font")
      (disabled
       "MaruGothic_Limited_disabled.font")
      (focused
       "MaruGothic_Limited_focused.font")
      (selecting
       "MaruGothic_Limited_selecting.font"))))
   (songlist_shell_font
    (resource_file
     "ui/label_shell.milo")
    (texts
     (text
      "label_shell_normal.txt"
      (normal
       "maru_gothic_normal.font")
      (disabled
       "maru_gothic_disabled.font")
      (focused
       "maru_gothic_focused.font")
      (selecting
       "maru_gothic_selecting.font"))))
   (default
    (resource_file
     "ui/label_game.milo")
    (texts
     (text
      "normal_menu_game_font.txt"
      (normal
       "MaruGothic_Limited.font")
      (disabled
       "MaruGothic_Limited_disabled.font")
      (focused
       "MaruGothic_Limited_focused.font")
      (selecting
       "MaruGothic_Limited_selecting.font"))))))
 (UIList
  (types
   (menu
    (resource_file
     "ui/caps_list.milo")
    (vertical 1)
    (element
     ((text
       "all_caps.txt")))
    (back_arrow
     "back.mesh")
    (next_arrow
     "next.mesh")
    (highlight
     "highlight.mesh"
     "highlight.mnm")
    (colors
     (((normal
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 7.3467e-41 7.3467e-41 7.3467e-41)
        (selecting 1 1 1))
       (highlight
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 7.3467e-41 7.3467e-41 7.3467e-41)
        (selecting 1 0 0))
       (disabled
        (normal 2.755e-41 2.755e-41 2.755e-41)
        (focused 2.755e-41 2.755e-41 2.755e-41)
        (disabled 2.755e-41 2.755e-41 2.755e-41)
        (selecting 2.755e-41 2.755e-41 2.755e-41)))))
    (provider
     ("song")))
   (song
    (resource_file
     "ui/song_list.milo")
    (vertical 1)
    (element
     ((text
       "list.txt")))
    (back_arrow
     "back.mesh")
    (next_arrow
     "next.mesh")
    (highlight
     "highlight.mesh"
     "highlight.mnm")
    (colors
     (((normal
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 7.3467e-41 7.3467e-41 7.3467e-41)
        (selecting 1 1 1))
       (highlight
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 7.3467e-41 7.3467e-41 7.3467e-41)
        (selecting 1 0 0))
       (disabled
        (normal 2.755e-41 2.755e-41 2.755e-41)
        (focused 2.755e-41 2.755e-41 2.755e-41)
        (disabled 2.755e-41 2.755e-41 2.755e-41)
        (selecting 2.755e-41 2.755e-41 2.755e-41)))))
    (provider
     ("song")))
   (top_songs
    (resource_file
     "ui/top_song_list.milo")
    (vertical 1)
    (element
     ((text
       "index.txt")
      (text
       "score.txt")
      (text
       "title.txt")))
    (back_arrow
     "back.mesh")
    (next_arrow
     "next.mesh")
    (highlight
     "highlight.mesh")
    (colors
     (((normal
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (highlight
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (disabled
        (normal 2.755e-41 2.755e-41 2.755e-41)
        (focused 2.755e-41 2.755e-41 2.755e-41)
        (disabled 2.755e-41 2.755e-41 2.755e-41)
        (selecting 2.755e-41 2.755e-41 2.755e-41)))
      ((normal
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (highlight
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (disabled
        (normal 2.755e-41 2.755e-41 2.755e-41)
        (focused 2.755e-41 2.755e-41 2.755e-41)
        (disabled 2.755e-41 2.755e-41 2.755e-41)
        (selecting 2.755e-41 2.755e-41 2.755e-41)))
      ((normal
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (highlight
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (disabled
        (normal 2.755e-41 2.755e-41 2.755e-41)
        (focused 2.755e-41 2.755e-41 2.755e-41)
        (disabled 2.755e-41 2.755e-41 2.755e-41)
        (selecting 2.755e-41 2.755e-41 2.755e-41)))))
    (provider
     ("0."
      "000,000,00"
      "Foo Bar Fighters")))
   (top_marathons
    (resource_file
     "ui/top_marathon_list.milo")
    (vertical 1)
    (element
     ((text
       "index.txt")
      (text
       "score.txt")
      (text
       "stars.txt")
      (text
       "extra_stars.txt")
      (mesh
       "star.mesh")
      (mesh
       "extra_star.mesh")))
    (back_arrow
     "back.mesh")
    (next_arrow
     "next.mesh")
    (highlight
     "highlight.mesh")
    (colors
     (((normal
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (highlight
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (disabled
        (normal 2.755e-41 2.755e-41 2.755e-41)
        (focused 2.755e-41 2.755e-41 2.755e-41)
        (disabled 2.755e-41 2.755e-41 2.755e-41)
        (selecting 2.755e-41 2.755e-41 2.755e-41)))
      ((normal
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (highlight
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (disabled
        (normal 2.755e-41 2.755e-41 2.755e-41)
        (focused 2.755e-41 2.755e-41 2.755e-41)
        (disabled 2.755e-41 2.755e-41 2.755e-41)
        (selecting 2.755e-41 2.755e-41 2.755e-41)))
      ((normal
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (highlight
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (disabled
        (normal 2.755e-41 2.755e-41 2.755e-41)
        (focused 2.755e-41 2.755e-41 2.755e-41)
        (disabled 2.755e-41 2.755e-41 2.755e-41)
        (selecting 2.755e-41 2.755e-41 2.755e-41)))
      ((normal
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (highlight
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (disabled
        (normal 2.755e-41 2.755e-41 2.755e-41)
        (focused 2.755e-41 2.755e-41 2.755e-41)
        (disabled 2.755e-41 2.755e-41 2.755e-41)
        (selecting 2.755e-41 2.755e-41 2.755e-41)))
      ((normal
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (highlight
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (disabled
        (normal 2.755e-41 2.755e-41 2.755e-41)
        (focused 2.755e-41 2.755e-41 2.755e-41)
        (disabled 2.755e-41 2.755e-41 2.755e-41)
        (selecting 2.755e-41 2.755e-41 2.755e-41)))
      ((normal
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (highlight
        (normal 1 1 1)
        (focused 1 1 1)
        (disabled 1 1 1)
        (selecting 1 1 1))
       (disabled
        (normal 2.755e-41 2.755e-41 2.755e-41)
        (focused 2.755e-41 2.755e-41 2.755e-41)
        (disabled 2.755e-41 2.755e-41 2.755e-41)
        (selecting 2.755e-41 2.755e-41 2.755e-41)))))
    (provider
     ("0."
      "000,000,00"
      "00"
      "00"
      "star.mat"
      "extra_star.mat")))
   (spin
    (resource_file
     "ui/list_spin.milo")
    (vertical 1)
    (element
     ((text
       "spin.txt")))
    (back_arrow
     "back.mesh")
    (next_arrow
     "next.mesh")
    (highlight
     "highlight.mesh")
    (colors
     (((normal
        (normal 4.5918e-41 4.5918e-41 4.5918e-41)
        (focused 1 1 1)
        (disabled 2.755e-41 2.755e-41 2.755e-41)
        (selected 1 1 1))
       (highlight
        (normal 1 1 1)
        (focused 1 0 0)
        (disabled 1 1 1)
        (selected 1 1 0)))))
    (provider
     ("0")))))
 (UISlider
  (types
   (default
    (resource_file
     "ui/slider_volume.milo")
    (vertical 1)
    (meshes
     ("slider_fill_new.mesh"
      (normal
       "slider_fill_new.mat")
      (focused
       "slider_fill_new.mat")
      (disabled
       "slider_fill_new.mat")
      (selected
       "slider_fill_new.mat"))
     ("slider_background.mesh"
      (normal
       "slider_background.mat")
      (focused
       "slider_background.mat")
      (disabled
       "slider_background.mat")
      (selected
       "slider_background.mat"))))
   (speaker
    (resource_file
     "ui/slider_volume.milo")
    (vertical 1)
    (meshes
     ("slider_fill_new.mesh"
      (normal
       "slider_fill_new.mat")
      (focused
       "slider_fill_new.mat")
      (disabled
       "slider_fill_new.mat")
      (selected
       "slider_fill_new.mat"))
     ("slider_background.mesh"
      (normal
       "slider_background.mat")
      (focused
       "slider_background.mat")
      (disabled
       "slider_background.mat")
      (selected
       "slider_background.mat"))))
   (light
    (resource_file
     "ui/slider_brightness.milo")
    (vertical 1)
    (meshes
     ("slider_fill_new.mesh"
      (normal
       "slider_fill_new.mat")
      (focused
       "slider_fill_new.mat")
      (disabled
       "slider_fill_new.mat")
      (selected
       "slider_fill_new.mat"))
     ("slider_background.mesh"
      (normal
       "slider_background.mat")
      (focused
       "slider_background.mat")
      (disabled
       "slider_background.mat")
      (selected
       "slider_background.mat"))))))
 (UITrigger
  (types))
 (TextEntry
  (resource_file
   "ui/textentry.milo")
  (types
   (default
    (text entry_profile.txt)
    (resource_file
     "ui/textentry.milo")
    (characters
     "v<_ABCDEFGHIJKLMNOPQRSTUVWXYZ")
    (text_length 9)
    (default_name
     "OWNER"))))
 (TrackDir
  (types))
 (GroundPlaneVis
  (types))
 (HorizonDir
  (types))
 (CharNeighborhood
  (types)))
(joypad
 (synaptics
  (use_synaptics 1)
  (degrees_per_scroll 14)
  (button_ranges 35 93 163 221)
  (wheel_y_squish 8.2651e-41))
 (disable 0)
 (deadzone 36)
 (threshold 6.8877e-41)
 (ignore 1 2 3 4 5 6 7)
 (hold_ms 500)
 (repeat_ms 50)
 (idle_time_dim 90)
 (idle_time_exit 180)
 (adapters
  (map
   ('SmartJoy PLUS Adapter' smart_plus)
   ('SmartJoy PLUS USB Adapter' smart_plus)
   ('SmartJoy Dual PLUS Adapter' smart_plus))
  (default
   (buttons
    (0 4)
    (1 5)
    (2 6)
    (3 7)
    (4 0)
    (5 1)
    (6 2)
    (7 3)
    (8 8)
    (9 11)
    (10 10)
    (11 9)
    (12 12)
    (13 13)
    (14 14)
    (15 15)))
  (smart_plus
   (buttons
    (0 4)
    (1 5)
    (2 6)
    (3 7)
    (4 0)
    (5 1)
    (6 2)
    (7 3)
    (8 11)
    (9 8)
    (10 9)
    (11 10))
   (pov
    (0 12)
    (1 13)
    (2 14)
    (3 15)))))
(disable_cheats 0)
(long_cheats)
(spew)
(math
 (sin_table_size 64)
 (bsp_check_scale 1.01018e-40)
 (bsp_pos_tol 9.18e-43)
 (bsp_dir_tol 9.1467e-41)
 (bsp_max_candidates 20)
 (bsp_max_depth 40))