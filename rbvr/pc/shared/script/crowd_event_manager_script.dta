(define emotions_config 
   (description "Emotions Config") 
   (props 
      (anim_test bool 
         (default FALSE) 
         (help "When checked, the float values below will take precedence over those within 'RBCrowdMemberEmotionalState'.")) 
      (attention float 
         (default 1.0) 
         (help "* The 'attention' value is used for testing crowd reactions.
 * It mimics the 'attention' value found within the 'RBCrowdMemberEmotionalState' component.
 * Rhythm is impacted by exciters which use the 'Attention' emotion.")) 
      (excitement float 
         (default 1.0) 
         (help "* The 'excitement' value is used for testing crowd reactions.
 * It mimics the 'excitement' value found within the 'RBCrowdMemberEmotionalState' component.
 * Rhythm is impacted by exciters which use the 'Excitement' emotion.")) 
      (happiness float 
         (default 1.0) 
         (help "* The 'happiness' value is used for testing crowd reactions.
 * It mimics the 'happiness' value found within the 'RBCrowdMemberEmotionalState' component.
 * Rhythm is impacted by exciters which use the 'Happiness' emotion.")) 
      (happiness_state int 
         (help "") 
         (allowed_values 
            (
               (0 "Idle/Neutral" "") 
               (1 "Quiet" "") 
               (2 "Groove" "") 
               (3 "Happy" "") 
               (4 "Very Happy" "")))) 
      (is_cheering bool 
         (default FALSE) 
         (help "When checked, simulates crowd member cheering.")) 
      (is_shouting bool 
         (default FALSE) 
         (help "Shout to the band")) 
      (is_shocked bool 
         (default FALSE) 
         (help "Is LIGHTNING shocked?!")) 
      (is_in_event bool 
         (default FALSE) 
         (help "Events for beat clap, jumping, head bang, etc")) 
      (is_in_song bool 
         (default FALSE) 
         (help "Is there a song playing?")) 
      (is_on_cellphone bool 
         (default FALSE) 
         (help "Is cellphone showing?")) 
      (song_tempo int 
         (help "") 
         (default 1) 
         (allowed_values 
            (
               (0 "Slow" "") 
               (1 "Medium" "") 
               (2 "Fast" "")))) 
      (event_name int 
         (help "") 
         (allowed_values 
            (
               (0 "None" "") 
               (1 "Reach" "Reaching up to the musician") 
               (2 "Jump" "") 
               (3 "Headbang" "") 
               (4 "Beat Clap" "") 
               (5 "Wave" "") 
               (6 "Hands Up" "") 
               (7 "Mellow Clap" "") 
               (8 "In Awe" "") 
               (9 "Cower" "") 
               (10 "Goat Chant" "") 
               (11 "Zombie Cheer" "") 
               (12 "Laugh" "") 
               (13 "FIGHT" "Wes and heckler fight") 
               (14 "FreakOut" "For laser eyes")))) 
      (genre int 
         (help "") 
         (allowed_values 
            (
               (0 "None" "") 
               (1 "Punk" "") 
               (2 "Metal" "")))) 
      (face_expression int 
         (help "") 
         (allowed_values 
            (
               (0 "All" "") 
               (1 "Neutral" "") 
               (2 "Quiet" "") 
               (3 "Happy" "") 
               (4 "Very Happy" "") 
               (5 "Frown" "") 
               (6 "Cheer" "") 
               (7 "Awe" "") 
               (8 "Scared" "") 
               (9 "Laughing" "")))) 
      (tempo_slow_threshold float 
         (default 100.0) 
         (help "song bpm needed to go into slow")) 
      (tempo_fast_threshold float 
         (default 150.0) 
         (help "song bpm needed to go into fast")) 
      (happy1 float 
         (default 0.1) 
         (help "threshold value that transitions from idle to quiet expectation")) 
      (happy2 float 
         (default 0.2) 
         (help "threshold value that transitions from quiet expectation to happy")) 
      (happy3 float 
         (default 0.4) 
         (help "threshold value that transitions from happy to very happy")) 
      (happy4 float 
         (default 0.6) 
         (help "max happiness, with reserve above")) 
      (wrong_place_goat_onstage bool 
         (default FALSE) 
         (save FALSE) 
         (help "Has the goat appeared on stage yet?"))))
