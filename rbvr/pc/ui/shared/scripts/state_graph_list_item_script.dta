(define Interface 
   (description "just list item state graph logic") 
   (props 
      (mat_items_list array 
         (help "A simple array of ints.") 
         (set_on_instance TRUE) 
         (item object 
            (help "An int array item whose default value matches its index within the array."))) 
      (graph_surrogate object 
         (view_on_instance TRUE)) 
      (label_object object 
         (view_on_instance TRUE)) 
      (value_object object 
         (view_on_instance TRUE)) 
      (label_loc_key symbol 
         (set_on_instance TRUE)) 
      (value_loc_key symbol 
         (set_on_instance TRUE)) 
      (skip_label_fade bool 
         (view_on_instance TRUE)) 
      (my_index_in_list int 
         (set_on_instance TRUE)) 
      (is_disabled bool 
         (set_on_instance TRUE)) 
      (is_highlighted bool 
         (set_on_instance TRUE)) 
      (is_equipped bool 
         (set_on_instance TRUE)) 
      (is_hidden bool 
         (set_on_instance TRUE)) 
      (is_disabled_t float 
         (view_on_instance TRUE)) 
      (is_highlighted_t float 
         (view_on_instance TRUE)) 
      (is_equipped_t float 
         (view_on_instance TRUE)) 
      (last_is_equipped bool 
         (view_on_instance TRUE)) 
      (last_is_hidden bool 
         (view_on_instance TRUE))))
(enter 
   {$this refresh_loc_key } 
   {$this refresh_lasts })
(refresh_loc_key 
   {if 
      {&& 
         [$this label_object ]
         [$this label_loc_key ]}
      {set 
         [
            (
               [$this label_object ] Text)localized_token ]
         [$this label_loc_key ]}} 
   {if 
      {&& 
         [$this value_object ]
         [$this value_loc_key ]}
      {set 
         [
            (
               [$this value_object ] Text)localized_token ]
         [$this value_loc_key ]}})
(poll 
   {$this refresh_loc_key } 
   {if 
      {== 
         [$this skip_label_fade ]FALSE }
      {if 
         [$this label_object ]
         {set 
            [
               (
                  [$this label_object ] Material)alpha ]
            [$this is_highlighted_t ]}}
      {if 
         [$this value_object ]
         {set 
            [
               (
                  [$this value_object ] Material)alpha ]
            [$this is_highlighted_t ]}}} 
   {foreach_int $i 0 
      {size 
         [$this mat_items_list ]}
      {set 
         [
            (
               [$this mat_items_list $i ] Material)disabled_t ]
         [$this is_disabled_t ]}
      {set 
         [
            (
               [$this mat_items_list $i ] Material)highlighted_t ]
         [$this is_highlighted_t ]}
      {set 
         [
            (
               [$this mat_items_list $i ] Material)equipped_t ]
         [$this is_equipped_t ]}} 
   {if 
      [$this graph_surrogate ]
      {set 
         [
            (
               [$this graph_surrogate ] Instance)my_index_in_list ]
         [$this my_index_in_list ]}
      {set 
         [
            (
               [$this graph_surrogate ] Instance)is_equipped ]
         [$this is_equipped ]}
      {set 
         [
            (
               [$this graph_surrogate ] Instance)is_highlighted ]
         [$this is_highlighted ]}
      {set 
         [
            (
               [$this graph_surrogate ] Instance)is_disabled ]
         [$this is_disabled ]}
      {set 
         [$this is_disabled_t ]
         [
            (
               [$this graph_surrogate ] Instance)is_disabled_t ]}
      {set 
         [$this is_equipped_t ]
         [
            (
               [$this graph_surrogate ] Instance)is_equipped_t ]}
      {set 
         [$this is_highlighted_t ]
         [
            (
               [$this graph_surrogate ] Instance)is_highlighted_t ]}} 
   {$this refresh_lasts })
(refresh_lasts 
   {set 
      [$this last_is_equipped ]
      [$this is_equipped ]} 
   {set 
      [$this last_is_hidden ]
      [$this is_hidden ]})
